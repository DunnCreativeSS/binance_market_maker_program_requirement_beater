usage: market_maker.py [-h] [-p] [--no-output] [-m] [--no-restart]
market_maker.py: error: unrecognized arguments: 7hMrKo1CbbhS58I85uaZtfz2cKUFbDIXlZEIGzCqXEMu7V8QcqjYBonrU93GfH1U
usage: market_maker.py [-h] [-p] [--no-output] [-m] [--no-restart]
market_maker.py: error: unrecognized arguments: dnB0rWq2T3XNlOHWObP6exuBVjMtI3S4BdDssUi5s4iuCgO9VK2xcpndNSfWPa3d
18
18
2
7hMrKo1CbbhS58I85uaZtfz2cKUFbDIXlZEIGzCqXEMu7V8QcqjYBonrU93GfH1U
0
1
2
1605040046736
1605040046736
0.0
18
18
2
dnB0rWq2T3XNlOHWObP6exuBVjMtI3S4BdDssUi5s4iuCgO9VK2xcpndNSfWPa3d
0
1
2
1605040046736
1605040046736
0.0
./run_bot.sh: 1: Syntax error: "(" unexpected
usage: market_maker.py [-h] [-p] [--no-output] [-m] [--no-restart]
market_maker.py: error: unrecognized arguments: dnB0rWq2T3XNlOHWObP6exuBVjMtI3S4BdDssUi5s4iuCgO9VK2xcpndNSfWPa3d
usage: market_maker.py [-h] [-p] [--no-output] [-m] [--no-restart]
market_maker.py: error: unrecognized arguments: 7hMrKo1CbbhS58I85uaZtfz2cKUFbDIXlZEIGzCqXEMu7V8QcqjYBonrU93GfH1U
18
18
2
dnB0rWq2T3XNlOHWObP6exuBVjMtI3S4BdDssUi5s4iuCgO9VK2xcpndNSfWPa3d
0
1
2
1605040244157
1605040244157
0.0
18
18
2
7hMrKo1CbbhS58I85uaZtfz2cKUFbDIXlZEIGzCqXEMu7V8QcqjYBonrU93GfH1U
0
1
2
1605040244157
1605040244157
0.0
Traceback (most recent call last):
  File "market_maker.py", line 7, in <module>
    pprint(len(pairs[key]))
NameError: name 'pprint' is not defined
Traceback (most recent call last):
  File "market_maker.py", line 7, in <module>
    pprint(len(pairs[key]))
NameError: name 'pprint' is not defined
Traceback (most recent call last):
  File "market_maker.py", line 235, in <module>
    pprint('argskey: ' + args.key)
  File "market_maker.py", line 175, in pprint
    myfile.write(datetime.datetime.utcnow().strftime( '%Y-%m-%d %H:%M:%S' ) + ', line: ' + str(inspect.currentframe().f_back.f_lineno)  + ': ' + str(string) + '\n')
AttributeError: type object 'datetime.datetime' has no attribute 'datetime'
Traceback (most recent call last):
  File "market_maker.py", line 235, in <module>
    pprint('argskey: ' + args.key)
  File "market_maker.py", line 175, in pprint
    myfile.write(datetime.datetime.utcnow().strftime( '%Y-%m-%d %H:%M:%S' ) + ', line: ' + str(inspect.currentframe().f_back.f_lineno)  + ': ' + str(string) + '\n')
AttributeError: type object 'datetime.datetime' has no attribute 'datetime'
Traceback (most recent call last):
  File "market_maker.py", line 235, in <module>
    pprint('argskey: ' + args.key)
  File "market_maker.py", line 175, in pprint
    myfile.write(datetime.utcnow().strftime( '%Y-%m-%d %H:%M:%S' ) + ', line: ' + str(inspect.currentframe().f_back.f_lineno)  + ': ' + str(string) + '\n')
NameError: name 'inspect' is not defined
Traceback (most recent call last):
  File "market_maker.py", line 235, in <module>
    pprint('argskey: ' + args.key)
  File "market_maker.py", line 175, in pprint
    myfile.write(datetime.utcnow().strftime( '%Y-%m-%d %H:%M:%S' ) + ', line: ' + str(inspect.currentframe().f_back.f_lineno)  + ': ' + str(string) + '\n')
NameError: name 'inspect' is not defined
Exception in thread Thread-1:
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/urllib3/connectionpool.py", line 421, in _make_request
    six.raise_from(e, None)
  File "<string>", line 3, in raise_from
  File "/usr/lib/python3/dist-packages/urllib3/connectionpool.py", line 416, in _make_request
    httplib_response = conn.getresponse()
  File "/usr/lib/python3.8/http/client.py", line 1347, in getresponse
    response.begin()
  File "/usr/lib/python3.8/http/client.py", line 307, in begin
    version, status, reason = self._read_status()
  File "/usr/lib/python3.8/http/client.py", line 268, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "/usr/lib/python3.8/socket.py", line 669, in readinto
    return self._sock.recv_into(b)
  File "/usr/lib/python3/dist-packages/urllib3/contrib/pyopenssl.py", line 326, in recv_into
    raise timeout("The read operation timed out")
socket.timeout: The read operation timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/requests/adapters.py", line 439, in send
    resp = conn.urlopen(
  File "/usr/lib/python3/dist-packages/urllib3/connectionpool.py", line 719, in urlopen
    retries = retries.increment(
  File "/usr/lib/python3/dist-packages/urllib3/util/retry.py", line 400, in increment
    raise six.reraise(type(error), error, _stacktrace)
  File "/usr/lib/python3/dist-packages/six.py", line 703, in reraise
    raise value
  File "/usr/lib/python3/dist-packages/urllib3/connectionpool.py", line 665, in urlopen
    httplib_response = self._make_request(
  File "/usr/lib/python3/dist-packages/urllib3/connectionpool.py", line 423, in _make_request
    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)
  File "/usr/lib/python3/dist-packages/urllib3/connectionpool.py", line 330, in _raise_timeout
    raise ReadTimeoutError(
urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='fapi.binance.com', port=443): Read timed out. (read timeout=10)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/d/alimm-bot-newest/ccxt/base/exchange.py", line 562, in fetch
    response = self.session.request(
  File "/usr/lib/python3/dist-packages/requests/sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "/usr/lib/python3/dist-packages/requests/sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "/usr/lib/python3/dist-packages/requests/adapters.py", line 529, in send
    raise ReadTimeout(e, request=request)
requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='fapi.binance.com', port=443): Read timed out. (read timeout=10)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "market_maker.py", line 925, in run_first
    client.fapiPrivatePostLeverage({'symbol': pair.replace('/USDT', 'USDT'), 'leverage': self.lev})
  File "/mnt/d/alimm-bot-newest/ccxt/base/exchange.py", line 465, in inner
    return entry(_self, **inner_kwargs)
  File "/mnt/d/alimm-bot-newest/ccxt/binance.py", line 2390, in request
    response = self.fetch2(path, api, method, params, headers, body)
  File "/mnt/d/alimm-bot-newest/ccxt/base/exchange.py", line 486, in fetch2
    return self.fetch(request['url'], request['method'], request['headers'], request['body'])
  File "/mnt/d/alimm-bot-newest/ccxt/base/exchange.py", line 591, in fetch
    raise RequestTimeout(method + ' ' + url)
ccxt.base.errors.RequestTimeout: POST https://fapi.binance.com/fapi/v1/leverage

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.8/threading.py", line 932, in _bootstrap_inner
    self.run()
  File "/usr/lib/python3.8/threading.py", line 870, in run
    self._target(*self._args, **self._kwargs)
  File "market_maker.py", line 932, in run_first
    self.creates[fut] = True
AttributeError: 'MarketMaker' object has no attribute 'creates'
Exception in thread Thread-1:
Traceback (most recent call last):
  File "/mnt/d/alimm-bot-newest/ccxt/base/exchange.py", line 588, in fetch
    response.raise_for_status()
  File "/usr/lib/python3/dist-packages/requests/models.py", line 940, in raise_for_status
    raise HTTPError(http_error_msg, response=self)
requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://fapi.binance.com/fapi/v1/leverage

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "market_maker.py", line 924, in run_first
    client.fapiPrivatePostLeverage({'symbol': pair.replace('/USDT', 'USDT'), 'leverage': self.lev})
  File "/mnt/d/alimm-bot-newest/ccxt/base/exchange.py", line 465, in inner
    return entry(_self, **inner_kwargs)
  File "/mnt/d/alimm-bot-newest/ccxt/binance.py", line 2390, in request
    response = self.fetch2(path, api, method, params, headers, body)
  File "/mnt/d/alimm-bot-newest/ccxt/base/exchange.py", line 486, in fetch2
    return self.fetch(request['url'], request['method'], request['headers'], request['body'])
  File "/mnt/d/alimm-bot-newest/ccxt/base/exchange.py", line 601, in fetch
    self.handle_rest_errors(http_status_code, http_status_text, http_response, url, method)
  File "/mnt/d/alimm-bot-newest/ccxt/base/exchange.py", line 634, in handle_rest_errors
    raise error(' '.join([method, url, string_code, http_status_text, body]))
ccxt.base.errors.ExchangeNotAvailable: POST https://fapi.binance.com/fapi/v1/leverage 502 Bad Gateway <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML><HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<TITLE>ERROR: The request could not be satisfied</TITLE>
</HEAD><BODY>
<H1>502 ERROR</H1>
<H2>The request could not be satisfied.</H2>
<HR noshade size="1px">
The origin closed the connection.
We can't connect to the server for this app or website at this time. There might be too much traffic or a configuration error. Try again later, or contact the app or website owner.
<BR clear="all">
If you provide content to customers through CloudFront, you can find steps to troubleshoot and help prevent this error by reviewing the CloudFront documentation.
<BR clear="all">
<HR noshade size="1px">
<PRE>
Generated by cloudfront (CloudFront)
Request ID: a1GX8V7gbmVPf6gCl131rEoVifLE76K6BmYKDr3Sl38Ia8dGbwfIFA==
</PRE>
<ADDRESS>
</ADDRESS>
</BODY></HTML>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.8/threading.py", line 932, in _bootstrap_inner
    self.run()
  File "/usr/lib/python3.8/threading.py", line 870, in run
    self._target(*self._args, **self._kwargs)
  File "market_maker.py", line 931, in run_first
    self.creates[fut] = True
AttributeError: 'MarketMaker' object has no attribute 'creates'
Exception in thread Thread-1:
Traceback (most recent call last):
  File "/mnt/d/alimm-bot-newest/ccxt/base/exchange.py", line 588, in fetch
    response.raise_for_status()
  File "/usr/lib/python3/dist-packages/requests/models.py", line 940, in raise_for_status
    raise HTTPError(http_error_msg, response=self)
requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://fapi.binance.com/fapi/v1/leverage

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "market_maker.py", line 929, in run_first
    client.fapiPrivatePostLeverage({'symbol': pair.replace('/USDT', 'USDT'), 'leverage': self.lev})
  File "/mnt/d/alimm-bot-newest/ccxt/base/exchange.py", line 465, in inner
    return entry(_self, **inner_kwargs)
  File "/mnt/d/alimm-bot-newest/ccxt/binance.py", line 2390, in request
    response = self.fetch2(path, api, method, params, headers, body)
  File "/mnt/d/alimm-bot-newest/ccxt/base/exchange.py", line 486, in fetch2
    return self.fetch(request['url'], request['method'], request['headers'], request['body'])
  File "/mnt/d/alimm-bot-newest/ccxt/base/exchange.py", line 601, in fetch
    self.handle_rest_errors(http_status_code, http_status_text, http_response, url, method)
  File "/mnt/d/alimm-bot-newest/ccxt/base/exchange.py", line 634, in handle_rest_errors
    raise error(' '.join([method, url, string_code, http_status_text, body]))
ccxt.base.errors.ExchangeNotAvailable: POST https://fapi.binance.com/fapi/v1/leverage 502 Bad Gateway <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML><HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<TITLE>ERROR: The request could not be satisfied</TITLE>
</HEAD><BODY>
<H1>502 ERROR</H1>
<H2>The request could not be satisfied.</H2>
<HR noshade size="1px">
The origin closed the connection.
We can't connect to the server for this app or website at this time. There might be too much traffic or a configuration error. Try again later, or contact the app or website owner.
<BR clear="all">
If you provide content to customers through CloudFront, you can find steps to troubleshoot and help prevent this error by reviewing the CloudFront documentation.
<BR clear="all">
<HR noshade size="1px">
<PRE>
Generated by cloudfront (CloudFront)
Request ID: BlIYVUs8turWGT5honvCh3QL4j1WAKBtizzzBiFGvZnG_B02NOzVDQ==
</PRE>
<ADDRESS>
</ADDRESS>
</BODY></HTML>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.8/threading.py", line 932, in _bootstrap_inner
    self.run()
  File "/usr/lib/python3.8/threading.py", line 870, in run
    self._target(*self._args, **self._kwargs)
  File "market_maker.py", line 936, in run_first
    self.creates[fut] = True
AttributeError: 'MarketMaker' object has no attribute 'creates'
  File "market_maker.py", line 706
    myfile.write(datetime.utcnow().strftime( '%Y-%m-%d %H:%M:%S' ) + ', ' + client.apiKey + ': Potential earned: $' + str(round(potential* 1000) / 1000) + ', that\'s $' + str(round(potentialday*1000)/1000) '/day, with $2k it would be $' + str(round(potential2k*1000)/1000) + ' by now or ' + str(round(potential2kday*1000)/1000) '/day!\n')
                                                                                                                                                                                                              ^
SyntaxError: invalid syntax
  File "market_maker.py", line 706
    myfile.write(datetime.utcnow().strftime( '%Y-%m-%d %H:%M:%S' ) + ', ' + client.apiKey + ': Potential earned: $' + str(round(potential* 1000) / 1000) + ', that\'s $' + str(round(potentialday*1000)/1000) '/day, with $2k it would be $' + str(round(potential2k*1000)/1000) + ' by now or ' + str(round(potential2kday*1000)/1000) '/day!\n')
                                                                                                                                                                                                              ^
SyntaxError: invalid syntax
  File "market_maker.py", line 706
    myfile.write(datetime.utcnow().strftime( '%Y-%m-%d %H:%M:%S' ) + ', ' + client.apiKey + ': Potential earned: $' + str(round(potential* 1000) / 1000) + ', that\'s $' + str(round(potentialday*1000)/1000) '/day, with $2k it would be $' + str(round(potential2k*1000)/1000) + ' by now or ' + str(round(potential2kday*1000)/1000) '/day!\n')
                                                                                                                                                                                                              ^
SyntaxError: invalid syntax
  File "market_maker.py", line 706
    myfile.write(datetime.utcnow().strftime( '%Y-%m-%d %H:%M:%S' ) + ', ' + client.apiKey + ': Potential earned: $' + str(round(potential* 1000) / 1000) + ', that\'s $' + str(round(potentialday*1000)/1000) '/day, with $2k it would be $' + str(round(potential2k*1000)/1000) + ' by now or ' + str(round(potential2kday*1000)/1000) '/day!\n')
                                                                                                                                                                                                              ^
SyntaxError: invalid syntax
  File "market_maker.py", line 706
    myfile.write(datetime.utcnow().strftime( '%Y-%m-%d %H:%M:%S' ) + ', ' + client.apiKey + ': Potential earned: $' + str(round(potential* 1000) / 1000) + ', that\'s $' + str(round(potentialday*1000)/1000) + '/day, with $2k it would be $' + str(round(potential2k*1000)/1000) + ' by now or ' + str(round(potential2kday*1000)/1000) '/day!\n')
                                                                                                                                                                                                                                                                                                                                          ^
SyntaxError: invalid syntax
  File "market_maker.py", line 706
    myfile.write(datetime.utcnow().strftime( '%Y-%m-%d %H:%M:%S' ) + ', ' + client.apiKey + ': Potential earned: $' + str(round(potential* 1000) / 1000) + ', that\'s $' + str(round(potentialday*1000)/1000) + '/day, with $2k it would be $' + str(round(potential2k*1000)/1000) + ' by now or ' + str(round(potential2kday*1000)/1000) '/day!\n')
                                                                                                                                                                                                                                                                                                                                          ^
SyntaxError: invalid syntax
  File "market_maker.py", line 866
    )
    ^
SyntaxError: unmatched ')'
  File "market_maker.py", line 866
    )
    ^
SyntaxError: unmatched ')'
Exception in thread Thread-1:
Traceback (most recent call last):
  File "/usr/lib/python3.8/threading.py", line 932, in _bootstrap_inner
    self.run()
  File "/usr/lib/python3.8/threading.py", line 870, in run
    self._target(*self._args, **self._kwargs)
  File "market_maker.py", line 865, in run_first
    bm = BinanceSocketManager(bin_client, user_timeout=60)
TypeError: __init__() missing 1 required positional argument: 'n'
Exception in thread Thread-1:
Traceback (most recent call last):
  File "/usr/lib/python3.8/threading.py", line 932, in _bootstrap_inner
    self.run()
  File "/usr/lib/python3.8/threading.py", line 870, in run
    self._target(*self._args, **self._kwargs)
  File "market_maker.py", line 865, in run_first
    bm = BinanceSocketManager(bin_client, user_timeout=60)
TypeError: __init__() missing 1 required positional argument: 'n'
50.5
placekey: dnB0rWq2T3XNlOHWObP6exuBVjMtI3S4BdDssUi5s4iuCgO9VK2xcpndNSfWPa3d
['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isascii', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']50.5
placekey: 7hMrKo1CbbhS58I85uaZtfz2cKUFbDIXlZEIGzCqXEMu7V8QcqjYBonrU93GfH1U
['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isascii', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']['__class__', '__del__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'account', 'accounts', 'aggregate', 'aiohttpProxy', 'aiohttpTrustEnv', 'aiohttp_proxy', 'aiohttp_trust_env', 'amountToPrecision', 'amount_to_precision', 'api', 'apiKey', 'arrayConcat', 'array_concat', 'asyncioLoop', 'asyncio_loop', 'balance', 'base16ToBinary', 'base16_to_binary', 'base58Alphabet', 'base58Decoder', 'base58Encoder', 'base58ToBinary', 'base58_alphabet', 'base58_decoder', 'base58_encoder', 'base58_to_binary', 'base64ToBinary', 'base64ToString', 'base64_to_binary', 'base64_to_string', 'base64urlencode', 'baseCurrencies', 'base_currencies', 'binaryConcat', 'binaryConcatArray', 'binaryToBase16', 'binaryToBase58', 'binaryToBase64', 'binary_concat', 'binary_concat_array', 'binary_to_base16', 'binary_to_base58', 'binary_to_base64', 'buildOhlcvc', 'build_ohlcvc', 'calculateFee', 'calculate_fee', 'cancelAllOrders', 'cancelOrder', 'cancelUnifiedOrder', 'cancel_all_orders', 'cancel_order', 'cancel_unified_order', 'capitalize', 'certified', 'checkAddress', 'checkRequiredCredentials', 'checkRequiredDependencies', 'check_address', 'check_required_credentials', 'check_required_dependencies', 'commonCurrencies', 'commonCurrencyCode', 'common_currency_code', 'convertOHLCVToTradingView', 'convertTradingViewToOHLCV', 'convert_ohlcv_to_trading_view', 'convert_trading_view_to_ohlcv', 'costToPrecision', 'cost_to_precision', 'countries', 'createLimitBuyOrder', 'createLimitOrder', 'createLimitSellOrder', 'createMarketBuyOrder', 'createMarketOrder', 'createMarketSellOrder', 'createOrder', 'create_limit_buy_order', 'create_limit_order', 'create_limit_sell_order', 'create_market_buy_order', 'create_market_order', 'create_market_sell_order', 'create_order', 'currencies', 'currenciesById', 'currencies_by_id', 'currency', 'currencyId', 'currencyToPrecision', 'currency_id', 'currency_to_precision', 'dapiDataGetBasis', 'dapiDataGetGlobalLongShortAccountRatio', 'dapiDataGetGloballongshortaccountratio', 'dapiDataGetOpenInterestHist', 'dapiDataGetOpeninteresthist', 'dapiDataGetTakerBuySellVol', 'dapiDataGetTakerbuysellvol', 'dapiDataGetTopLongShortAccountRatio', 'dapiDataGetTopLongShortPositionRatio', 'dapiDataGetToplongshortaccountratio', 'dapiDataGetToplongshortpositionratio', 'dapiData_get_basis', 'dapiData_get_globallongshortaccountratio', 'dapiData_get_openinteresthist', 'dapiData_get_takerbuysellvol', 'dapiData_get_toplongshortaccountratio', 'dapiData_get_toplongshortpositionratio', 'dapiPrivateDeleteAllOpenOrders', 'dapiPrivateDeleteAllopenorders', 'dapiPrivateDeleteBatchOrders', 'dapiPrivateDeleteBatchorders', 'dapiPrivateDeleteListenKey', 'dapiPrivateDeleteListenkey', 'dapiPrivateDeleteOrder', 'dapiPrivateGetAccount', 'dapiPrivateGetAdlQuantile', 'dapiPrivateGetAdlquantile', 'dapiPrivateGetAllOrders', 'dapiPrivateGetAllorders', 'dapiPrivateGetBalance', 'dapiPrivateGetForceOrders', 'dapiPrivateGetForceorders', 'dapiPrivateGetIncome', 'dapiPrivateGetLeverageBracket', 'dapiPrivateGetLeveragebracket', 'dapiPrivateGetOpenOrder', 'dapiPrivateGetOpenOrders', 'dapiPrivateGetOpenorder', 'dapiPrivateGetOpenorders', 'dapiPrivateGetOrder', 'dapiPrivateGetPositionMarginHistory', 'dapiPrivateGetPositionRisk', 'dapiPrivateGetPositionSideDual', 'dapiPrivateGetPositionmarginHistory', 'dapiPrivateGetPositionrisk', 'dapiPrivateGetPositionsideDual', 'dapiPrivateGetUserTrades', 'dapiPrivateGetUsertrades', 'dapiPrivatePostBatchOrders', 'dapiPrivatePostBatchorders', 'dapiPrivatePostCountdownCancelAll', 'dapiPrivatePostCountdowncancelall', 'dapiPrivatePostLeverage', 'dapiPrivatePostListenKey', 'dapiPrivatePostListenkey', 'dapiPrivatePostMarginType', 'dapiPrivatePostMargintype', 'dapiPrivatePostOrder', 'dapiPrivatePostPositionMargin', 'dapiPrivatePostPositionSideDual', 'dapiPrivatePostPositionmargin', 'dapiPrivatePostPositionsideDual', 'dapiPrivatePutListenKey', 'dapiPrivatePutListenkey', 'dapiPrivate_delete_allopenorders', 'dapiPrivate_delete_batchorders', 'dapiPrivate_delete_listenkey', 'dapiPrivate_delete_order', 'dapiPrivate_get_account', 'dapiPrivate_get_adlquantile', 'dapiPrivate_get_allorders', 'dapiPrivate_get_balance', 'dapiPrivate_get_forceorders', 'dapiPrivate_get_income', 'dapiPrivate_get_leveragebracket', 'dapiPrivate_get_openorder', 'dapiPrivate_get_openorders', 'dapiPrivate_get_order', 'dapiPrivate_get_positionmargin_history', 'dapiPrivate_get_positionrisk', 'dapiPrivate_get_positionside_dual', 'dapiPrivate_get_usertrades', 'dapiPrivate_post_batchorders', 'dapiPrivate_post_countdowncancelall', 'dapiPrivate_post_leverage', 'dapiPrivate_post_listenkey', 'dapiPrivate_post_margintype', 'dapiPrivate_post_order', 'dapiPrivate_post_positionmargin', 'dapiPrivate_post_positionside_dual', 'dapiPrivate_put_listenkey', 'dapiPublicGetAggTrades', 'dapiPublicGetAggtrades', 'dapiPublicGetAllForceOrders', 'dapiPublicGetAllforceorders', 'dapiPublicGetContinuousKlines', 'dapiPublicGetContinuousklines', 'dapiPublicGetDepth', 'dapiPublicGetExchangeInfo', 'dapiPublicGetExchangeinfo', 'dapiPublicGetFundingRate', 'dapiPublicGetFundingrate', 'dapiPublicGetHistoricalTrades', 'dapiPublicGetHistoricaltrades', 'dapiPublicGetIndexPriceKlines', 'dapiPublicGetIndexpriceklines', 'dapiPublicGetKlines', 'dapiPublicGetMarkPriceKlines', 'dapiPublicGetMarkpriceklines', 'dapiPublicGetOpenInterest', 'dapiPublicGetOpeninterest', 'dapiPublicGetPing', 'dapiPublicGetPremiumIndex', 'dapiPublicGetPremiumindex', 'dapiPublicGetTicker24hr', 'dapiPublicGetTickerBookTicker', 'dapiPublicGetTickerBookticker', 'dapiPublicGetTickerPrice', 'dapiPublicGetTime', 'dapiPublicGetTrades', 'dapiPublic_get_aggtrades', 'dapiPublic_get_allforceorders', 'dapiPublic_get_continuousklines', 'dapiPublic_get_depth', 'dapiPublic_get_exchangeinfo', 'dapiPublic_get_fundingrate', 'dapiPublic_get_historicaltrades', 'dapiPublic_get_indexpriceklines', 'dapiPublic_get_klines', 'dapiPublic_get_markpriceklines', 'dapiPublic_get_openinterest', 'dapiPublic_get_ping', 'dapiPublic_get_premiumindex', 'dapiPublic_get_ticker_24hr', 'dapiPublic_get_ticker_bookticker', 'dapiPublic_get_ticker_price', 'dapiPublic_get_time', 'dapiPublic_get_trades', 'decimalToBytes', 'decimalToPrecision', 'decimal_to_bytes', 'decimal_to_precision', 'decode', 'deepExtend', 'deep_extend', 'defineRestApi', 'define_rest_api', 'describe', 'dmy', 'ecdsa', 'eddsa', 'editLimitBuyOrder', 'editLimitOrder', 'editLimitSellOrder', 'editOrder', 'edit_limit_buy_order', 'edit_limit_order', 'edit_limit_sell_order', 'edit_order', 'enableLastHttpResponse', 'enableLastJsonResponse', 'enableLastResponseHeaders', 'enableRateLimit', 'encode', 'encodeUriComponent', 'encode_uri_component', 'exceptions', 'extend', 'extractParams', 'extract_params', 'fapiDataGetGlobalLongShortAccountRatio', 'fapiDataGetGloballongshortaccountratio', 'fapiDataGetOpenInterestHist', 'fapiDataGetOpeninteresthist', 'fapiDataGetTakerlongshortRatio', 'fapiDataGetTakerlongshortratio', 'fapiDataGetTopLongShortAccountRatio', 'fapiDataGetTopLongShortPositionRatio', 'fapiDataGetToplongshortaccountratio', 'fapiDataGetToplongshortpositionratio', 'fapiData_get_globallongshortaccountratio', 'fapiData_get_openinteresthist', 'fapiData_get_takerlongshortratio', 'fapiData_get_toplongshortaccountratio', 'fapiData_get_toplongshortpositionratio', 'fapiPrivateDeleteAllOpenOrders', 'fapiPrivateDeleteAllopenorders', 'fapiPrivateDeleteBatchOrders', 'fapiPrivateDeleteBatchorders', 'fapiPrivateDeleteListenKey', 'fapiPrivateDeleteListenkey', 'fapiPrivateDeleteOrder', 'fapiPrivateGetAccount', 'fapiPrivateGetAllForceOrders', 'fapiPrivateGetAllOrders', 'fapiPrivateGetAllforceorders', 'fapiPrivateGetAllorders', 'fapiPrivateGetBalance', 'fapiPrivateGetIncome', 'fapiPrivateGetLeverageBracket', 'fapiPrivateGetLeveragebracket', 'fapiPrivateGetOpenOrder', 'fapiPrivateGetOpenOrders', 'fapiPrivateGetOpenorder', 'fapiPrivateGetOpenorders', 'fapiPrivateGetOrder', 'fapiPrivateGetPositionMarginHistory', 'fapiPrivateGetPositionRisk', 'fapiPrivateGetPositionSideDual', 'fapiPrivateGetPositionmarginHistory', 'fapiPrivateGetPositionrisk', 'fapiPrivateGetPositionsideDual', 'fapiPrivateGetUserTrades', 'fapiPrivateGetUsertrades', 'fapiPrivatePostBatchOrders', 'fapiPrivatePostBatchorders', 'fapiPrivatePostCountdownCancelAll', 'fapiPrivatePostCountdowncancelall', 'fapiPrivatePostLeverage', 'fapiPrivatePostListenKey', 'fapiPrivatePostListenkey', 'fapiPrivatePostMarginType', 'fapiPrivatePostMargintype', 'fapiPrivatePostOrder', 'fapiPrivatePostPositionMargin', 'fapiPrivatePostPositionSideDual', 'fapiPrivatePostPositionmargin', 'fapiPrivatePostPositionsideDual', 'fapiPrivatePutListenKey', 'fapiPrivatePutListenkey', 'fapiPrivateV2GetAccount', 'fapiPrivateV2GetBalance', 'fapiPrivateV2GetPositionRisk', 'fapiPrivateV2GetPositionrisk', 'fapiPrivateV2_get_account', 'fapiPrivateV2_get_balance', 'fapiPrivateV2_get_positionrisk', 'fapiPrivate_delete_allopenorders', 'fapiPrivate_delete_batchorders', 'fapiPrivate_delete_listenkey', 'fapiPrivate_delete_order', 'fapiPrivate_get_account', 'fapiPrivate_get_allforceorders', 'fapiPrivate_get_allorders', 'fapiPrivate_get_balance', 'fapiPrivate_get_income', 'fapiPrivate_get_leveragebracket', 'fapiPrivate_get_openorder', 'fapiPrivate_get_openorders', 'fapiPrivate_get_order', 'fapiPrivate_get_positionmargin_history', 'fapiPrivate_get_positionrisk', 'fapiPrivate_get_positionside_dual', 'fapiPrivate_get_usertrades', 'fapiPrivate_post_batchorders', 'fapiPrivate_post_countdowncancelall', 'fapiPrivate_post_leverage', 'fapiPrivate_post_listenkey', 'fapiPrivate_post_margintype', 'fapiPrivate_post_order', 'fapiPrivate_post_positionmargin', 'fapiPrivate_post_positionside_dual', 'fapiPrivate_put_listenkey', 'fapiPublicGetAggTrades', 'fapiPublicGetAggtrades', 'fapiPublicGetAllForceOrders', 'fapiPublicGetAllforceorders', 'fapiPublicGetDepth', 'fapiPublicGetExchangeInfo', 'fapiPublicGetExchangeinfo', 'fapiPublicGetFundingRate', 'fapiPublicGetFundingrate', 'fapiPublicGetHistoricalTrades', 'fapiPublicGetHistoricaltrades', 'fapiPublicGetKlines', 'fapiPublicGetOpenInterest', 'fapiPublicGetOpeninterest', 'fapiPublicGetPing', 'fapiPublicGetPremiumIndex', 'fapiPublicGetPremiumindex', 'fapiPublicGetTicker24hr', 'fapiPublicGetTickerBookTicker', 'fapiPublicGetTickerBookticker', 'fapiPublicGetTickerPrice', 'fapiPublicGetTime', 'fapiPublicGetTrades', 'fapiPublic_get_aggtrades', 'fapiPublic_get_allforceorders', 'fapiPublic_get_depth', 'fapiPublic_get_exchangeinfo', 'fapiPublic_get_fundingrate', 'fapiPublic_get_historicaltrades', 'fapiPublic_get_klines', 'fapiPublic_get_openinterest', 'fapiPublic_get_ping', 'fapiPublic_get_premiumindex', 'fapiPublic_get_ticker_24hr', 'fapiPublic_get_ticker_bookticker', 'fapiPublic_get_ticker_price', 'fapiPublic_get_time', 'fapiPublic_get_trades', 'feeToPrecision', 'fee_to_precision', 'fees', 'fetch', 'fetch2', 'fetchBalance', 'fetchBidsAsks', 'fetchClosedOrders', 'fetchCurrencies', 'fetchDepositAddress', 'fetchDeposits', 'fetchFees', 'fetchFreeBalance', 'fetchFundingFee', 'fetchFundingFees', 'fetchL2OrderBook', 'fetchMarkets', 'fetchMyDustTrades', 'fetchMyTrades', 'fetchOHLCV', 'fetchOhlcvc', 'fetchOpenOrders', 'fetchOrder', 'fetchOrderBook', 'fetchOrderStatus', 'fetchOrderTrades', 'fetchOrders', 'fetchPartialBalance', 'fetchStatus', 'fetchTicker', 'fetchTickers', 'fetchTime', 'fetchTotalBalance', 'fetchTrades', 'fetchTradingFee', 'fetchTradingFees', 'fetchTransactions', 'fetchUnifiedOrder', 'fetchUsedBalance', 'fetchWithdrawals', 'fetch_balance', 'fetch_bids_asks', 'fetch_closed_orders', 'fetch_currencies', 'fetch_deposit_address', 'fetch_deposits', 'fetch_fees', 'fetch_free_balance', 'fetch_funding_fee', 'fetch_funding_fees', 'fetch_l2_order_book', 'fetch_markets', 'fetch_my_dust_trades', 'fetch_my_trades', 'fetch_ohlcv', 'fetch_ohlcvc', 'fetch_open_orders', 'fetch_order', 'fetch_order_book', 'fetch_order_status', 'fetch_order_trades', 'fetch_orders', 'fetch_partial_balance', 'fetch_status', 'fetch_ticker', 'fetch_tickers', 'fetch_time', 'fetch_total_balance', 'fetch_trades', 'fetch_trading_fee', 'fetch_trading_fees', 'fetch_transactions', 'fetch_unified_order', 'fetch_used_balance', 'fetch_withdrawals', 'filterBy', 'filterByArray', 'filterByCurrencySinceLimit', 'filterBySinceLimit', 'filterBySymbol', 'filterBySymbolSinceLimit', 'filterByValueSinceLimit', 'filter_by', 'filter_by_array', 'filter_by_currency_since_limit', 'filter_by_since_limit', 'filter_by_symbol', 'filter_by_symbol_since_limit', 'filter_by_value_since_limit', 'findBroadlyMatchedKey', 'find_broadly_matched_key', 'fromWei', 'from_wei', 'groupBy', 'group_by', 'gzipDeflate', 'gzip_deflate', 'handleErrors', 'handleRestErrors', 'handle_errors', 'handle_rest_errors', 'has', 'hasWeb3', 'has_web3', 'hash', 'hashMessage', 'headers', 'hmac', 'hostname', 'httpExceptions', 'id', 'ids', 'implodeParams', 'implode_params', 'inArray', 'in_array', 'indexBy', 'index_by', 'integerDivide', 'integerModulo', 'integerPow', 'integer_divide', 'integer_modulo', 'integer_pow', 'isEmpty', 'isJsonEncodedObject', 'isTextResponse', 'is_empty', 'is_json_encoded_object', 'is_text_response', 'iso8601', 'json', 'jwt', 'keyExists', 'key_exists', 'keysort', 'lastHttpResponse', 'lastJsonResponse', 'lastResponseHeaders', 'lastRestPollTimestamp', 'lastRestRequestTimestamp', 'last_http_response', 'last_json_response', 'last_response_headers', 'limits', 'loadAccounts', 'loadFees', 'loadMarkets', 'loadTimeDifference', 'loadTradingLimits', 'load_accounts', 'load_fees', 'load_markets', 'load_time_difference', 'load_trading_limits', 'loadedFees', 'loaded_fees', 'logger', 'market', 'marketId', 'marketIds', 'market_id', 'market_ids', 'markets', 'marketsById', 'markets_by_id', 'microseconds', 'milliseconds', 'minFundingAddressLength', 'msec', 'myTrades', 'name', 'nonce', 'numberToBE', 'numberToLE', 'numberToString', 'number_to_be', 'number_to_le', 'number_to_string', 'oath', 'ohlcvs', 'omit', 'options', 'orderbooks', 'ordered', 'orders', 'origin', 'paddingMode', 'parse8601', 'parseBalance', 'parseBidAsk', 'parseBidsAsks', 'parseDate', 'parseDustTrade', 'parseJson', 'parseJsonResponse', 'parseLedger', 'parseOHLCV', 'parseOhlcvs', 'parseOrder', 'parseOrderBook', 'parseOrderStatus', 'parseOrders', 'parseTicker', 'parseTickers', 'parseTimeframe', 'parseTrade', 'parseTrades', 'parseTradingFee', 'parseTradingViewOHLCV', 'parseTransaction', 'parseTransactionStatusByType', 'parseTransactions', 'parse_balance', 'parse_bid_ask', 'parse_bids_asks', 'parse_date', 'parse_dust_trade', 'parse_json', 'parse_ledger', 'parse_ohlcv', 'parse_ohlcvs', 'parse_order', 'parse_order_book', 'parse_order_status', 'parse_orders', 'parse_ticker', 'parse_tickers', 'parse_timeframe', 'parse_trade', 'parse_trades', 'parse_trading_fee', 'parse_trading_view_ohlcv', 'parse_transaction', 'parse_transaction_status_by_type', 'parse_transactions', 'password', 'pluck', 'precision', 'precisionFromString', 'precisionMode', 'precision_from_string', 'prepareRequestHeaders', 'prepare_request_headers', 'priceToPrecision', 'price_to_precision', 'print', 'privateDeleteOpenOrders', 'privateDeleteOpenorders', 'privateDeleteOrder', 'privateDeleteOrderList', 'privateDeleteOrderlist', 'privateGetAccount', 'privateGetAllOrderList', 'privateGetAllOrders', 'privateGetAllorderlist', 'privateGetAllorders', 'privateGetMyTrades', 'privateGetMytrades', 'privateGetOpenOrderList', 'privateGetOpenOrders', 'privateGetOpenorderlist', 'privateGetOpenorders', 'privateGetOrder', 'privateGetOrderList', 'privateGetOrderlist', 'privateKey', 'privateKeyToAddress', 'privatePostOrder', 'privatePostOrderOco', 'privatePostOrderTest', 'private_delete_openorders', 'private_delete_order', 'private_delete_orderlist', 'private_get_account', 'private_get_allorderlist', 'private_get_allorders', 'private_get_mytrades', 'private_get_openorderlist', 'private_get_openorders', 'private_get_order', 'private_get_orderlist', 'private_post_order', 'private_post_order_oco', 'private_post_order_test', 'pro', 'proxies', 'proxy', 'publicDeleteUserDataStream', 'publicDeleteUserdatastream', 'publicGetAggTrades', 'publicGetAggtrades', 'publicGetDepth', 'publicGetExchangeInfo', 'publicGetExchangeinfo', 'publicGetHistoricalTrades', 'publicGetHistoricaltrades', 'publicGetKlines', 'publicGetPing', 'publicGetTicker24hr', 'publicGetTickerBookTicker', 'publicGetTickerBookticker', 'publicGetTickerPrice', 'publicGetTime', 'publicGetTrades', 'publicPostUserDataStream', 'publicPostUserdatastream', 'publicPutUserDataStream', 'publicPutUserdatastream', 'public_delete_userdatastream', 'public_get_aggtrades', 'public_get_depth', 'public_get_exchangeinfo', 'public_get_historicaltrades', 'public_get_klines', 'public_get_ping', 'public_get_ticker_24hr', 'public_get_ticker_bookticker', 'public_get_ticker_price', 'public_get_time', 'public_get_trades', 'public_post_userdatastream', 'public_put_userdatastream', 'quoteCurrencies', 'quote_currencies', 'rateLimit', 'rateLimitMaxTokens', 'rateLimitTokens', 'rateLimitUpdateTime', 'rawencode', 'remove0xPrefix', 'remove0x_prefix', 'request', 'requiredCredentials', 'requiresEddsa', 'requiresWeb3', 'restPollerLoopIsRunning', 'restRequestQueue', 'rfc2616', 'roundTimeframe', 'round_timeframe', 'rsa', 'safeCurrency', 'safeCurrencyCode', 'safeEither', 'safeFloat', 'safeFloat2', 'safeInteger', 'safeInteger2', 'safeIntegerProduct', 'safeIntegerProduct2', 'safeMarket', 'safeString', 'safeString2', 'safeStringLower', 'safeStringLower2', 'safeStringUpper', 'safeStringUpper2', 'safeSymbol', 'safeTimestamp', 'safeTimestamp2', 'safeValue', 'safeValue2', 'safe_currency', 'safe_currency_code', 'safe_either', 'safe_float', 'safe_float_2', 'safe_integer', 'safe_integer_2', 'safe_integer_product', 'safe_integer_product_2', 'safe_market', 'safe_string', 'safe_string_2', 'safe_string_lower', 'safe_string_lower_2', 'safe_string_upper', 'safe_string_upper_2', 'safe_symbol', 'safe_timestamp', 'safe_timestamp_2', 'safe_value', 'safe_value_2', 'sapiDeleteMarginOrder', 'sapiDeleteUserDataStream', 'sapiDeleteUserDataStreamIsolated', 'sapiDeleteUserdatastream', 'sapiDeleteUserdatastreamIsolated', 'sapiGetAccountSnapshot', 'sapiGetAccountsnapshot', 'sapiGetAssetAssetDividend', 'sapiGetAssetAssetdividend', 'sapiGetCapitalConfigGetall', 'sapiGetCapitalDepositAddress', 'sapiGetCapitalDepositHisrec', 'sapiGetCapitalDepositSubAddress', 'sapiGetCapitalDepositSubHisrec', 'sapiGetCapitalDepositSubaddress', 'sapiGetCapitalDepositSubhisrec', 'sapiGetCapitalWithdrawHistory', 'sapiGetFuturesLoanAdjustCollateralHistory', 'sapiGetFuturesLoanAdjustcollateralHistory', 'sapiGetFuturesLoanBorrowHistory', 'sapiGetFuturesLoanCalcAdjustLevel', 'sapiGetFuturesLoanCalcMaxAdjustAmount', 'sapiGetFuturesLoanCalcadjustlevel', 'sapiGetFuturesLoanCalcmaxadjustamount', 'sapiGetFuturesLoanConfigs', 'sapiGetFuturesLoanLiquidationHistory', 'sapiGetFuturesLoanLiquidationhistory', 'sapiGetFuturesLoanRepayHistory', 'sapiGetFuturesLoanWallet', 'sapiGetFuturesTransfer', 'sapiGetLendingDailyProductList', 'sapiGetLendingDailyTokenPosition', 'sapiGetLendingDailyUserLeftQuota', 'sapiGetLendingDailyUserRedemptionQuota', 'sapiGetLendingDailyUserleftquota', 'sapiGetLendingDailyUserredemptionquota', 'sapiGetLendingProjectList', 'sapiGetLendingProjectPositionList', 'sapiGetLendingUnionAccount', 'sapiGetLendingUnionInterestHistory', 'sapiGetLendingUnionInteresthistory', 'sapiGetLendingUnionPurchaseRecord', 'sapiGetLendingUnionPurchaserecord', 'sapiGetLendingUnionRedemptionRecord', 'sapiGetLendingUnionRedemptionrecord', 'sapiGetMarginAccount', 'sapiGetMarginAllAssets', 'sapiGetMarginAllOrders', 'sapiGetMarginAllPairs', 'sapiGetMarginAllassets', 'sapiGetMarginAllorders', 'sapiGetMarginAllpairs', 'sapiGetMarginAsset', 'sapiGetMarginForceLiquidationRec', 'sapiGetMarginForceliquidationrec', 'sapiGetMarginInterestHistory', 'sapiGetMarginInteresthistory', 'sapiGetMarginIsolatedAccount', 'sapiGetMarginIsolatedAllPairs', 'sapiGetMarginIsolatedAllpairs', 'sapiGetMarginIsolatedPair', 'sapiGetMarginIsolatedTransfer', 'sapiGetMarginLoan', 'sapiGetMarginMaxBorrowable', 'sapiGetMarginMaxTransferable', 'sapiGetMarginMaxborrowable', 'sapiGetMarginMaxtransferable', 'sapiGetMarginMyTrades', 'sapiGetMarginMytrades', 'sapiGetMarginOpenOrders', 'sapiGetMarginOpenorders', 'sapiGetMarginOrder', 'sapiGetMarginPair', 'sapiGetMarginPriceIndex', 'sapiGetMarginPriceindex', 'sapiGetMarginRepay', 'sapiGetMarginTransfer', 'sapiGetMiningPaymentList', 'sapiGetMiningPubAlgoList', 'sapiGetMiningPubAlgolist', 'sapiGetMiningPubCoinList', 'sapiGetMiningPubCoinlist', 'sapiGetMiningStatisticsUserList', 'sapiGetMiningStatisticsUserStatus', 'sapiGetMiningWorkerDetail', 'sapiGetMiningWorkerList', 'sapiGetSubAccountFuturesAccount', 'sapiGetSubAccountFuturesAccountSummary', 'sapiGetSubAccountFuturesAccountsummary', 'sapiGetSubAccountFuturesInternalTransfer', 'sapiGetSubAccountFuturesInternaltransfer', 'sapiGetSubAccountFuturesPositionRisk', 'sapiGetSubAccountFuturesPositionrisk', 'sapiGetSubAccountMarginAccount', 'sapiGetSubAccountMarginAccountSummary', 'sapiGetSubAccountMarginAccountsummary', 'sapiGetSubAccountSpotSummary', 'sapiGetSubAccountSpotsummary', 'sapiGetSubAccountStatus', 'sapiGetSubAccountTransferSubUserHistory', 'sapiGetSubAccountTransferSubuserhistory', 'sapiPostAccountDisableFastWithdrawSwitch', 'sapiPostAccountDisablefastwithdrawswitch', 'sapiPostAccountEnableFastWithdrawSwitch', 'sapiPostAccountEnablefastwithdrawswitch', 'sapiPostAssetDust', 'sapiPostCapitalWithdrawApply', 'sapiPostFuturesLoanAdjustCollateral', 'sapiPostFuturesLoanAdjustcollateral', 'sapiPostFuturesLoanBorrow', 'sapiPostFuturesLoanRepay', 'sapiPostFuturesTransfer', 'sapiPostLendingCustomizedFixedPurchase', 'sapiPostLendingCustomizedfixedPurchase', 'sapiPostLendingDailyPurchase', 'sapiPostLendingDailyRedeem', 'sapiPostMarginIsolatedCreate', 'sapiPostMarginIsolatedTransfer', 'sapiPostMarginLoan', 'sapiPostMarginOrder', 'sapiPostMarginRepay', 'sapiPostMarginTransfer', 'sapiPostSubAccountFuturesEnable', 'sapiPostSubAccountFuturesInternalTransfer', 'sapiPostSubAccountFuturesInternaltransfer', 'sapiPostSubAccountFuturesTransfer', 'sapiPostSubAccountMarginEnable', 'sapiPostSubAccountMarginTransfer', 'sapiPostSubAccountTransferSubToMaster', 'sapiPostSubAccountTransferSubToSub', 'sapiPostSubAccountTransferSubtomaster', 'sapiPostSubAccountTransferSubtosub', 'sapiPostUserDataStream', 'sapiPostUserDataStreamIsolated', 'sapiPostUserdatastream', 'sapiPostUserdatastreamIsolated', 'sapiPutUserDataStream', 'sapiPutUserDataStreamIsolated', 'sapiPutUserdatastream', 'sapiPutUserdatastreamIsolated', 'sapi_delete_margin_order', 'sapi_delete_userdatastream', 'sapi_delete_userdatastream_isolated', 'sapi_get_accountsnapshot', 'sapi_get_asset_assetdividend', 'sapi_get_capital_config_getall', 'sapi_get_capital_deposit_address', 'sapi_get_capital_deposit_hisrec', 'sapi_get_capital_deposit_subaddress', 'sapi_get_capital_deposit_subhisrec', 'sapi_get_capital_withdraw_history', 'sapi_get_futures_loan_adjustcollateral_history', 'sapi_get_futures_loan_borrow_history', 'sapi_get_futures_loan_calcadjustlevel', 'sapi_get_futures_loan_calcmaxadjustamount', 'sapi_get_futures_loan_configs', 'sapi_get_futures_loan_liquidationhistory', 'sapi_get_futures_loan_repay_history', 'sapi_get_futures_loan_wallet', 'sapi_get_futures_transfer', 'sapi_get_lending_daily_product_list', 'sapi_get_lending_daily_token_position', 'sapi_get_lending_daily_userleftquota', 'sapi_get_lending_daily_userredemptionquota', 'sapi_get_lending_project_list', 'sapi_get_lending_project_position_list', 'sapi_get_lending_union_account', 'sapi_get_lending_union_interesthistory', 'sapi_get_lending_union_purchaserecord', 'sapi_get_lending_union_redemptionrecord', 'sapi_get_margin_account', 'sapi_get_margin_allassets', 'sapi_get_margin_allorders', 'sapi_get_margin_allpairs', 'sapi_get_margin_asset', 'sapi_get_margin_forceliquidationrec', 'sapi_get_margin_interesthistory', 'sapi_get_margin_isolated_account', 'sapi_get_margin_isolated_allpairs', 'sapi_get_margin_isolated_pair', 'sapi_get_margin_isolated_transfer', 'sapi_get_margin_loan', 'sapi_get_margin_maxborrowable', 'sapi_get_margin_maxtransferable', 'sapi_get_margin_mytrades', 'sapi_get_margin_openorders', 'sapi_get_margin_order', 'sapi_get_margin_pair', 'sapi_get_margin_priceindex', 'sapi_get_margin_repay', 'sapi_get_margin_transfer', 'sapi_get_mining_payment_list', 'sapi_get_mining_pub_algolist', 'sapi_get_mining_pub_coinlist', 'sapi_get_mining_statistics_user_list', 'sapi_get_mining_statistics_user_status', 'sapi_get_mining_worker_detail', 'sapi_get_mining_worker_list', 'sapi_get_sub_account_futures_account', 'sapi_get_sub_account_futures_accountsummary', 'sapi_get_sub_account_futures_internaltransfer', 'sapi_get_sub_account_futures_positionrisk', 'sapi_get_sub_account_margin_account', 'sapi_get_sub_account_margin_accountsummary', 'sapi_get_sub_account_spotsummary', 'sapi_get_sub_account_status', 'sapi_get_sub_account_transfer_subuserhistory', 'sapi_post_account_disablefastwithdrawswitch', 'sapi_post_account_enablefastwithdrawswitch', 'sapi_post_asset_dust', 'sapi_post_capital_withdraw_apply', 'sapi_post_futures_loan_adjustcollateral', 'sapi_post_futures_loan_borrow', 'sapi_post_futures_loan_repay', 'sapi_post_futures_transfer', 'sapi_post_lending_customizedfixed_purchase', 'sapi_post_lending_daily_purchase', 'sapi_post_lending_daily_redeem', 'sapi_post_margin_isolated_create', 'sapi_post_margin_isolated_transfer', 'sapi_post_margin_loan', 'sapi_post_margin_order', 'sapi_post_margin_repay', 'sapi_post_margin_transfer', 'sapi_post_sub_account_futures_enable', 'sapi_post_sub_account_futures_internaltransfer', 'sapi_post_sub_account_futures_transfer', 'sapi_post_sub_account_margin_enable', 'sapi_post_sub_account_margin_transfer', 'sapi_post_sub_account_transfer_subtomaster', 'sapi_post_sub_account_transfer_subtosub', 'sapi_post_userdatastream', 'sapi_post_userdatastream_isolated', 'sapi_put_userdatastream', 'sapi_put_userdatastream_isolated', 'sec', 'seconds', 'secret', 'session', 'setHeaders', 'setMarkets', 'setSandboxMode', 'set_headers', 'set_markets', 'set_sandbox_mode', 'sign', 'signHash', 'signMessage', 'signMessageString', 'sign_message_string', 'sleep', 'soliditySha3', 'solidityTypes', 'solidityValues', 'sortBy', 'sort_by', 'status', 'stringToBase64', 'string_to_base64', 'strip', 'substituteCommonCurrencyCodes', 'sum', 'symbols', 'throttle', 'throwBroadlyMatchedException', 'throwExactlyMatchedException', 'throw_broadly_matched_exception', 'throw_exactly_matched_exception', 'tickers', 'timeframes', 'timeout', 'toArray', 'toWei', 'to_array', 'to_wei', 'token', 'tokenBucket', 'totp', 'trades', 'transactions', 'truncate', 'truncateToString', 'truncate_to_string', 'twofa', 'uid', 'unique', 'unjson', 'urlencode', 'urlencodeWithArrayRepeat', 'urlencode_with_array_repeat', 'urls', 'usec', 'userAgent', 'userAgents', 'uuid', 'uuidv1', 'v3GetTickerBookTicker', 'v3GetTickerBookticker', 'v3GetTickerPrice', 'v3_get_ticker_bookticker', 'v3_get_ticker_price', 'verbose', 'verify', 'version', 'vwap', 'walletAddress', 'wapiGetAccountStatus', 'wapiGetAccountstatus', 'wapiGetApiTradingStatus', 'wapiGetApitradingstatus', 'wapiGetAssetDetail', 'wapiGetAssetdetail', 'wapiGetDepositAddress', 'wapiGetDepositHistory', 'wapiGetDepositaddress', 'wapiGetDeposithistory', 'wapiGetSubAccountAssets', 'wapiGetSubAccountList', 'wapiGetSubAccountTransferHistory', 'wapiGetSystemStatus', 'wapiGetSystemstatus', 'wapiGetTradeFee', 'wapiGetTradefee', 'wapiGetUserAssetDribbletLog', 'wapiGetUserassetdribbletlog', 'wapiGetWithdrawHistory', 'wapiGetWithdrawhistory', 'wapiPostSubAccountTransfer', 'wapiPostWithdraw', 'wapi_get_accountstatus', 'wapi_get_apitradingstatus', 'wapi_get_assetdetail', 'wapi_get_depositaddress', 'wapi_get_deposithistory', 'wapi_get_sub_account_assets', 'wapi_get_sub_account_list', 'wapi_get_sub_account_transfer_history', 'wapi_get_systemstatus', 'wapi_get_tradefee', 'wapi_get_userassetdribbletlog', 'wapi_get_withdrawhistory', 'wapi_post_sub_account_transfer', 'wapi_post_withdraw', 'web3', 'withdraw', 'ymd', 'ymdhms']['__class__', '__del__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'account', 'accounts', 'aggregate', 'aiohttpProxy', 'aiohttpTrustEnv', 'aiohttp_proxy', 'aiohttp_trust_env', 'amountToPrecision', 'amount_to_precision', 'api', 'apiKey', 'arrayConcat', 'array_concat', 'asyncioLoop', 'asyncio_loop', 'balance', 'base16ToBinary', 'base16_to_binary', 'base58Alphabet', 'base58Decoder', 'base58Encoder', 'base58ToBinary', 'base58_alphabet', 'base58_decoder', 'base58_encoder', 'base58_to_binary', 'base64ToBinary', 'base64ToString', 'base64_to_binary', 'base64_to_string', 'base64urlencode', 'baseCurrencies', 'base_currencies', 'binaryConcat', 'binaryConcatArray', 'binaryToBase16', 'binaryToBase58', 'binaryToBase64', 'binary_concat', 'binary_concat_array', 'binary_to_base16', 'binary_to_base58', 'binary_to_base64', 'buildOhlcvc', 'build_ohlcvc', 'calculateFee', 'calculate_fee', 'cancelAllOrders', 'cancelOrder', 'cancelUnifiedOrder', 'cancel_all_orders', 'cancel_order', 'cancel_unified_order', 'capitalize', 'certified', 'checkAddress', 'checkRequiredCredentials', 'checkRequiredDependencies', 'check_address', 'check_required_credentials', 'check_required_dependencies', 'commonCurrencies', 'commonCurrencyCode', 'common_currency_code', 'convertOHLCVToTradingView', 'convertTradingViewToOHLCV', 'convert_ohlcv_to_trading_view', 'convert_trading_view_to_ohlcv', 'costToPrecision', 'cost_to_precision', 'countries', 'createLimitBuyOrder', 'createLimitOrder', 'createLimitSellOrder', 'createMarketBuyOrder', 'createMarketOrder', 'createMarketSellOrder', 'createOrder', 'create_limit_buy_order', 'create_limit_order', 'create_limit_sell_order', 'create_market_buy_order', 'create_market_order', 'create_market_sell_order', 'create_order', 'currencies', 'currenciesById', 'currencies_by_id', 'currency', 'currencyId', 'currencyToPrecision', 'currency_id', 'currency_to_precision', 'dapiDataGetBasis', 'dapiDataGetGlobalLongShortAccountRatio', 'dapiDataGetGloballongshortaccountratio', 'dapiDataGetOpenInterestHist', 'dapiDataGetOpeninteresthist', 'dapiDataGetTakerBuySellVol', 'dapiDataGetTakerbuysellvol', 'dapiDataGetTopLongShortAccountRatio', 'dapiDataGetTopLongShortPositionRatio', 'dapiDataGetToplongshortaccountratio', 'dapiDataGetToplongshortpositionratio', 'dapiData_get_basis', 'dapiData_get_globallongshortaccountratio', 'dapiData_get_openinteresthist', 'dapiData_get_takerbuysellvol', 'dapiData_get_toplongshortaccountratio', 'dapiData_get_toplongshortpositionratio', 'dapiPrivateDeleteAllOpenOrders', 'dapiPrivateDeleteAllopenorders', 'dapiPrivateDeleteBatchOrders', 'dapiPrivateDeleteBatchorders', 'dapiPrivateDeleteListenKey', 'dapiPrivateDeleteListenkey', 'dapiPrivateDeleteOrder', 'dapiPrivateGetAccount', 'dapiPrivateGetAdlQuantile', 'dapiPrivateGetAdlquantile', 'dapiPrivateGetAllOrders', 'dapiPrivateGetAllorders', 'dapiPrivateGetBalance', 'dapiPrivateGetForceOrders', 'dapiPrivateGetForceorders', 'dapiPrivateGetIncome', 'dapiPrivateGetLeverageBracket', 'dapiPrivateGetLeveragebracket', 'dapiPrivateGetOpenOrder', 'dapiPrivateGetOpenOrders', 'dapiPrivateGetOpenorder', 'dapiPrivateGetOpenorders', 'dapiPrivateGetOrder', 'dapiPrivateGetPositionMarginHistory', 'dapiPrivateGetPositionRisk', 'dapiPrivateGetPositionSideDual', 'dapiPrivateGetPositionmarginHistory', 'dapiPrivateGetPositionrisk', 'dapiPrivateGetPositionsideDual', 'dapiPrivateGetUserTrades', 'dapiPrivateGetUsertrades', 'dapiPrivatePostBatchOrders', 'dapiPrivatePostBatchorders', 'dapiPrivatePostCountdownCancelAll', 'dapiPrivatePostCountdowncancelall', 'dapiPrivatePostLeverage', 'dapiPrivatePostListenKey', 'dapiPrivatePostListenkey', 'dapiPrivatePostMarginType', 'dapiPrivatePostMargintype', 'dapiPrivatePostOrder', 'dapiPrivatePostPositionMargin', 'dapiPrivatePostPositionSideDual', 'dapiPrivatePostPositionmargin', 'dapiPrivatePostPositionsideDual', 'dapiPrivatePutListenKey', 'dapiPrivatePutListenkey', 'dapiPrivate_delete_allopenorders', 'dapiPrivate_delete_batchorders', 'dapiPrivate_delete_listenkey', 'dapiPrivate_delete_order', 'dapiPrivate_get_account', 'dapiPrivate_get_adlquantile', 'dapiPrivate_get_allorders', 'dapiPrivate_get_balance', 'dapiPrivate_get_forceorders', 'dapiPrivate_get_income', 'dapiPrivate_get_leveragebracket', 'dapiPrivate_get_openorder', 'dapiPrivate_get_openorders', 'dapiPrivate_get_order', 'dapiPrivate_get_positionmargin_history', 'dapiPrivate_get_positionrisk', 'dapiPrivate_get_positionside_dual', 'dapiPrivate_get_usertrades', 'dapiPrivate_post_batchorders', 'dapiPrivate_post_countdowncancelall', 'dapiPrivate_post_leverage', 'dapiPrivate_post_listenkey', 'dapiPrivate_post_margintype', 'dapiPrivate_post_order', 'dapiPrivate_post_positionmargin', 'dapiPrivate_post_positionside_dual', 'dapiPrivate_put_listenkey', 'dapiPublicGetAggTrades', 'dapiPublicGetAggtrades', 'dapiPublicGetAllForceOrders', 'dapiPublicGetAllforceorders', 'dapiPublicGetContinuousKlines', 'dapiPublicGetContinuousklines', 'dapiPublicGetDepth', 'dapiPublicGetExchangeInfo', 'dapiPublicGetExchangeinfo', 'dapiPublicGetFundingRate', 'dapiPublicGetFundingrate', 'dapiPublicGetHistoricalTrades', 'dapiPublicGetHistoricaltrades', 'dapiPublicGetIndexPriceKlines', 'dapiPublicGetIndexpriceklines', 'dapiPublicGetKlines', 'dapiPublicGetMarkPriceKlines', 'dapiPublicGetMarkpriceklines', 'dapiPublicGetOpenInterest', 'dapiPublicGetOpeninterest', 'dapiPublicGetPing', 'dapiPublicGetPremiumIndex', 'dapiPublicGetPremiumindex', 'dapiPublicGetTicker24hr', 'dapiPublicGetTickerBookTicker', 'dapiPublicGetTickerBookticker', 'dapiPublicGetTickerPrice', 'dapiPublicGetTime', 'dapiPublicGetTrades', 'dapiPublic_get_aggtrades', 'dapiPublic_get_allforceorders', 'dapiPublic_get_continuousklines', 'dapiPublic_get_depth', 'dapiPublic_get_exchangeinfo', 'dapiPublic_get_fundingrate', 'dapiPublic_get_historicaltrades', 'dapiPublic_get_indexpriceklines', 'dapiPublic_get_klines', 'dapiPublic_get_markpriceklines', 'dapiPublic_get_openinterest', 'dapiPublic_get_ping', 'dapiPublic_get_premiumindex', 'dapiPublic_get_ticker_24hr', 'dapiPublic_get_ticker_bookticker', 'dapiPublic_get_ticker_price', 'dapiPublic_get_time', 'dapiPublic_get_trades', 'decimalToBytes', 'decimalToPrecision', 'decimal_to_bytes', 'decimal_to_precision', 'decode', 'deepExtend', 'deep_extend', 'defineRestApi', 'define_rest_api', 'describe', 'dmy', 'ecdsa', 'eddsa', 'editLimitBuyOrder', 'editLimitOrder', 'editLimitSellOrder', 'editOrder', 'edit_limit_buy_order', 'edit_limit_order', 'edit_limit_sell_order', 'edit_order', 'enableLastHttpResponse', 'enableLastJsonResponse', 'enableLastResponseHeaders', 'enableRateLimit', 'encode', 'encodeUriComponent', 'encode_uri_component', 'exceptions', 'extend', 'extractParams', 'extract_params', 'fapiDataGetGlobalLongShortAccountRatio', 'fapiDataGetGloballongshortaccountratio', 'fapiDataGetOpenInterestHist', 'fapiDataGetOpeninteresthist', 'fapiDataGetTakerlongshortRatio', 'fapiDataGetTakerlongshortratio', 'fapiDataGetTopLongShortAccountRatio', 'fapiDataGetTopLongShortPositionRatio', 'fapiDataGetToplongshortaccountratio', 'fapiDataGetToplongshortpositionratio', 'fapiData_get_globallongshortaccountratio', 'fapiData_get_openinteresthist', 'fapiData_get_takerlongshortratio', 'fapiData_get_toplongshortaccountratio', 'fapiData_get_toplongshortpositionratio', 'fapiPrivateDeleteAllOpenOrders', 'fapiPrivateDeleteAllopenorders', 'fapiPrivateDeleteBatchOrders', 'fapiPrivateDeleteBatchorders', 'fapiPrivateDeleteListenKey', 'fapiPrivateDeleteListenkey', 'fapiPrivateDeleteOrder', 'fapiPrivateGetAccount', 'fapiPrivateGetAllForceOrders', 'fapiPrivateGetAllOrders', 'fapiPrivateGetAllforceorders', 'fapiPrivateGetAllorders', 'fapiPrivateGetBalance', 'fapiPrivateGetIncome', 'fapiPrivateGetLeverageBracket', 'fapiPrivateGetLeveragebracket', 'fapiPrivateGetOpenOrder', 'fapiPrivateGetOpenOrders', 'fapiPrivateGetOpenorder', 'fapiPrivateGetOpenorders', 'fapiPrivateGetOrder', 'fapiPrivateGetPositionMarginHistory', 'fapiPrivateGetPositionRisk', 'fapiPrivateGetPositionSideDual', 'fapiPrivateGetPositionmarginHistory', 'fapiPrivateGetPositionrisk', 'fapiPrivateGetPositionsideDual', 'fapiPrivateGetUserTrades', 'fapiPrivateGetUsertrades', 'fapiPrivatePostBatchOrders', 'fapiPrivatePostBatchorders', 'fapiPrivatePostCountdownCancelAll', 'fapiPrivatePostCountdowncancelall', 'fapiPrivatePostLeverage', 'fapiPrivatePostListenKey', 'fapiPrivatePostListenkey', 'fapiPrivatePostMarginType', 'fapiPrivatePostMargintype', 'fapiPrivatePostOrder', 'fapiPrivatePostPositionMargin', 'fapiPrivatePostPositionSideDual', 'fapiPrivatePostPositionmargin', 'fapiPrivatePostPositionsideDual', 'fapiPrivatePutListenKey', 'fapiPrivatePutListenkey', 'fapiPrivateV2GetAccount', 'fapiPrivateV2GetBalance', 'fapiPrivateV2GetPositionRisk', 'fapiPrivateV2GetPositionrisk', 'fapiPrivateV2_get_account', 'fapiPrivateV2_get_balance', 'fapiPrivateV2_get_positionrisk', 'fapiPrivate_delete_allopenorders', 'fapiPrivate_delete_batchorders', 'fapiPrivate_delete_listenkey', 'fapiPrivate_delete_order', 'fapiPrivate_get_account', 'fapiPrivate_get_allforceorders', 'fapiPrivate_get_allorders', 'fapiPrivate_get_balance', 'fapiPrivate_get_income', 'fapiPrivate_get_leveragebracket', 'fapiPrivate_get_openorder', 'fapiPrivate_get_openorders', 'fapiPrivate_get_order', 'fapiPrivate_get_positionmargin_history', 'fapiPrivate_get_positionrisk', 'fapiPrivate_get_positionside_dual', 'fapiPrivate_get_usertrades', 'fapiPrivate_post_batchorders', 'fapiPrivate_post_countdowncancelall', 'fapiPrivate_post_leverage', 'fapiPrivate_post_listenkey', 'fapiPrivate_post_margintype', 'fapiPrivate_post_order', 'fapiPrivate_post_positionmargin', 'fapiPrivate_post_positionside_dual', 'fapiPrivate_put_listenkey', 'fapiPublicGetAggTrades', 'fapiPublicGetAggtrades', 'fapiPublicGetAllForceOrders', 'fapiPublicGetAllforceorders', 'fapiPublicGetDepth', 'fapiPublicGetExchangeInfo', 'fapiPublicGetExchangeinfo', 'fapiPublicGetFundingRate', 'fapiPublicGetFundingrate', 'fapiPublicGetHistoricalTrades', 'fapiPublicGetHistoricaltrades', 'fapiPublicGetKlines', 'fapiPublicGetOpenInterest', 'fapiPublicGetOpeninterest', 'fapiPublicGetPing', 'fapiPublicGetPremiumIndex', 'fapiPublicGetPremiumindex', 'fapiPublicGetTicker24hr', 'fapiPublicGetTickerBookTicker', 'fapiPublicGetTickerBookticker', 'fapiPublicGetTickerPrice', 'fapiPublicGetTime', 'fapiPublicGetTrades', 'fapiPublic_get_aggtrades', 'fapiPublic_get_allforceorders', 'fapiPublic_get_depth', 'fapiPublic_get_exchangeinfo', 'fapiPublic_get_fundingrate', 'fapiPublic_get_historicaltrades', 'fapiPublic_get_klines', 'fapiPublic_get_openinterest', 'fapiPublic_get_ping', 'fapiPublic_get_premiumindex', 'fapiPublic_get_ticker_24hr', 'fapiPublic_get_ticker_bookticker', 'fapiPublic_get_ticker_price', 'fapiPublic_get_time', 'fapiPublic_get_trades', 'feeToPrecision', 'fee_to_precision', 'fees', 'fetch', 'fetch2', 'fetchBalance', 'fetchBidsAsks', 'fetchClosedOrders', 'fetchCurrencies', 'fetchDepositAddress', 'fetchDeposits', 'fetchFees', 'fetchFreeBalance', 'fetchFundingFee', 'fetchFundingFees', 'fetchL2OrderBook', 'fetchMarkets', 'fetchMyDustTrades', 'fetchMyTrades', 'fetchOHLCV', 'fetchOhlcvc', 'fetchOpenOrders', 'fetchOrder', 'fetchOrderBook', 'fetchOrderStatus', 'fetchOrderTrades', 'fetchOrders', 'fetchPartialBalance', 'fetchStatus', 'fetchTicker', 'fetchTickers', 'fetchTime', 'fetchTotalBalance', 'fetchTrades', 'fetchTradingFee', 'fetchTradingFees', 'fetchTransactions', 'fetchUnifiedOrder', 'fetchUsedBalance', 'fetchWithdrawals', 'fetch_balance', 'fetch_bids_asks', 'fetch_closed_orders', 'fetch_currencies', 'fetch_deposit_address', 'fetch_deposits', 'fetch_fees', 'fetch_free_balance', 'fetch_funding_fee', 'fetch_funding_fees', 'fetch_l2_order_book', 'fetch_markets', 'fetch_my_dust_trades', 'fetch_my_trades', 'fetch_ohlcv', 'fetch_ohlcvc', 'fetch_open_orders', 'fetch_order', 'fetch_order_book', 'fetch_order_status', 'fetch_order_trades', 'fetch_orders', 'fetch_partial_balance', 'fetch_status', 'fetch_ticker', 'fetch_tickers', 'fetch_time', 'fetch_total_balance', 'fetch_trades', 'fetch_trading_fee', 'fetch_trading_fees', 'fetch_transactions', 'fetch_unified_order', 'fetch_used_balance', 'fetch_withdrawals', 'filterBy', 'filterByArray', 'filterByCurrencySinceLimit', 'filterBySinceLimit', 'filterBySymbol', 'filterBySymbolSinceLimit', 'filterByValueSinceLimit', 'filter_by', 'filter_by_array', 'filter_by_currency_since_limit', 'filter_by_since_limit', 'filter_by_symbol', 'filter_by_symbol_since_limit', 'filter_by_value_since_limit', 'findBroadlyMatchedKey', 'find_broadly_matched_key', 'fromWei', 'from_wei', 'groupBy', 'group_by', 'gzipDeflate', 'gzip_deflate', 'handleErrors', 'handleRestErrors', 'handle_errors', 'handle_rest_errors', 'has', 'hasWeb3', 'has_web3', 'hash', 'hashMessage', 'headers', 'hmac', 'hostname', 'httpExceptions', 'id', 'ids', 'implodeParams', 'implode_params', 'inArray', 'in_array', 'indexBy', 'index_by', 'integerDivide', 'integerModulo', 'integerPow', 'integer_divide', 'integer_modulo', 'integer_pow', 'isEmpty', 'isJsonEncodedObject', 'isTextResponse', 'is_empty', 'is_json_encoded_object', 'is_text_response', 'iso8601', 'json', 'jwt', 'keyExists', 'key_exists', 'keysort', 'lastHttpResponse', 'lastJsonResponse', 'lastResponseHeaders', 'lastRestPollTimestamp', 'lastRestRequestTimestamp', 'last_http_response', 'last_json_response', 'last_response_headers', 'limits', 'loadAccounts', 'loadFees', 'loadMarkets', 'loadTimeDifference', 'loadTradingLimits', 'load_accounts', 'load_fees', 'load_markets', 'load_time_difference', 'load_trading_limits', 'loadedFees', 'loaded_fees', 'logger', 'market', 'marketId', 'marketIds', 'market_id', 'market_ids', 'markets', 'marketsById', 'markets_by_id', 'microseconds', 'milliseconds', 'minFundingAddressLength', 'msec', 'myTrades', 'name', 'nonce', 'numberToBE', 'numberToLE', 'numberToString', 'number_to_be', 'number_to_le', 'number_to_string', 'oath', 'ohlcvs', 'omit', 'options', 'orderbooks', 'ordered', 'orders', 'origin', 'paddingMode', 'parse8601', 'parseBalance', 'parseBidAsk', 'parseBidsAsks', 'parseDate', 'parseDustTrade', 'parseJson', 'parseJsonResponse', 'parseLedger', 'parseOHLCV', 'parseOhlcvs', 'parseOrder', 'parseOrderBook', 'parseOrderStatus', 'parseOrders', 'parseTicker', 'parseTickers', 'parseTimeframe', 'parseTrade', 'parseTrades', 'parseTradingFee', 'parseTradingViewOHLCV', 'parseTransaction', 'parseTransactionStatusByType', 'parseTransactions', 'parse_balance', 'parse_bid_ask', 'parse_bids_asks', 'parse_date', 'parse_dust_trade', 'parse_json', 'parse_ledger', 'parse_ohlcv', 'parse_ohlcvs', 'parse_order', 'parse_order_book', 'parse_order_status', 'parse_orders', 'parse_ticker', 'parse_tickers', 'parse_timeframe', 'parse_trade', 'parse_trades', 'parse_trading_fee', 'parse_trading_view_ohlcv', 'parse_transaction', 'parse_transaction_status_by_type', 'parse_transactions', 'password', 'pluck', 'precision', 'precisionFromString', 'precisionMode', 'precision_from_string', 'prepareRequestHeaders', 'prepare_request_headers', 'priceToPrecision', 'price_to_precision', 'print', 'privateDeleteOpenOrders', 'privateDeleteOpenorders', 'privateDeleteOrder', 'privateDeleteOrderList', 'privateDeleteOrderlist', 'privateGetAccount', 'privateGetAllOrderList', 'privateGetAllOrders', 'privateGetAllorderlist', 'privateGetAllorders', 'privateGetMyTrades', 'privateGetMytrades', 'privateGetOpenOrderList', 'privateGetOpenOrders', 'privateGetOpenorderlist', 'privateGetOpenorders', 'privateGetOrder', 'privateGetOrderList', 'privateGetOrderlist', 'privateKey', 'privateKeyToAddress', 'privatePostOrder', 'privatePostOrderOco', 'privatePostOrderTest', 'private_delete_openorders', 'private_delete_order', 'private_delete_orderlist', 'private_get_account', 'private_get_allorderlist', 'private_get_allorders', 'private_get_mytrades', 'private_get_openorderlist', 'private_get_openorders', 'private_get_order', 'private_get_orderlist', 'private_post_order', 'private_post_order_oco', 'private_post_order_test', 'pro', 'proxies', 'proxy', 'publicDeleteUserDataStream', 'publicDeleteUserdatastream', 'publicGetAggTrades', 'publicGetAggtrades', 'publicGetDepth', 'publicGetExchangeInfo', 'publicGetExchangeinfo', 'publicGetHistoricalTrades', 'publicGetHistoricaltrades', 'publicGetKlines', 'publicGetPing', 'publicGetTicker24hr', 'publicGetTickerBookTicker', 'publicGetTickerBookticker', 'publicGetTickerPrice', 'publicGetTime', 'publicGetTrades', 'publicPostUserDataStream', 'publicPostUserdatastream', 'publicPutUserDataStream', 'publicPutUserdatastream', 'public_delete_userdatastream', 'public_get_aggtrades', 'public_get_depth', 'public_get_exchangeinfo', 'public_get_historicaltrades', 'public_get_klines', 'public_get_ping', 'public_get_ticker_24hr', 'public_get_ticker_bookticker', 'public_get_ticker_price', 'public_get_time', 'public_get_trades', 'public_post_userdatastream', 'public_put_userdatastream', 'quoteCurrencies', 'quote_currencies', 'rateLimit', 'rateLimitMaxTokens', 'rateLimitTokens', 'rateLimitUpdateTime', 'rawencode', 'remove0xPrefix', 'remove0x_prefix', 'request', 'requiredCredentials', 'requiresEddsa', 'requiresWeb3', 'restPollerLoopIsRunning', 'restRequestQueue', 'rfc2616', 'roundTimeframe', 'round_timeframe', 'rsa', 'safeCurrency', 'safeCurrencyCode', 'safeEither', 'safeFloat', 'safeFloat2', 'safeInteger', 'safeInteger2', 'safeIntegerProduct', 'safeIntegerProduct2', 'safeMarket', 'safeString', 'safeString2', 'safeStringLower', 'safeStringLower2', 'safeStringUpper', 'safeStringUpper2', 'safeSymbol', 'safeTimestamp', 'safeTimestamp2', 'safeValue', 'safeValue2', 'safe_currency', 'safe_currency_code', 'safe_either', 'safe_float', 'safe_float_2', 'safe_integer', 'safe_integer_2', 'safe_integer_product', 'safe_integer_product_2', 'safe_market', 'safe_string', 'safe_string_2', 'safe_string_lower', 'safe_string_lower_2', 'safe_string_upper', 'safe_string_upper_2', 'safe_symbol', 'safe_timestamp', 'safe_timestamp_2', 'safe_value', 'safe_value_2', 'sapiDeleteMarginOrder', 'sapiDeleteUserDataStream', 'sapiDeleteUserDataStreamIsolated', 'sapiDeleteUserdatastream', 'sapiDeleteUserdatastreamIsolated', 'sapiGetAccountSnapshot', 'sapiGetAccountsnapshot', 'sapiGetAssetAssetDividend', 'sapiGetAssetAssetdividend', 'sapiGetCapitalConfigGetall', 'sapiGetCapitalDepositAddress', 'sapiGetCapitalDepositHisrec', 'sapiGetCapitalDepositSubAddress', 'sapiGetCapitalDepositSubHisrec', 'sapiGetCapitalDepositSubaddress', 'sapiGetCapitalDepositSubhisrec', 'sapiGetCapitalWithdrawHistory', 'sapiGetFuturesLoanAdjustCollateralHistory', 'sapiGetFuturesLoanAdjustcollateralHistory', 'sapiGetFuturesLoanBorrowHistory', 'sapiGetFuturesLoanCalcAdjustLevel', 'sapiGetFuturesLoanCalcMaxAdjustAmount', 'sapiGetFuturesLoanCalcadjustlevel', 'sapiGetFuturesLoanCalcmaxadjustamount', 'sapiGetFuturesLoanConfigs', 'sapiGetFuturesLoanLiquidationHistory', 'sapiGetFuturesLoanLiquidationhistory', 'sapiGetFuturesLoanRepayHistory', 'sapiGetFuturesLoanWallet', 'sapiGetFuturesTransfer', 'sapiGetLendingDailyProductList', 'sapiGetLendingDailyTokenPosition', 'sapiGetLendingDailyUserLeftQuota', 'sapiGetLendingDailyUserRedemptionQuota', 'sapiGetLendingDailyUserleftquota', 'sapiGetLendingDailyUserredemptionquota', 'sapiGetLendingProjectList', 'sapiGetLendingProjectPositionList', 'sapiGetLendingUnionAccount', 'sapiGetLendingUnionInterestHistory', 'sapiGetLendingUnionInteresthistory', 'sapiGetLendingUnionPurchaseRecord', 'sapiGetLendingUnionPurchaserecord', 'sapiGetLendingUnionRedemptionRecord', 'sapiGetLendingUnionRedemptionrecord', 'sapiGetMarginAccount', 'sapiGetMarginAllAssets', 'sapiGetMarginAllOrders', 'sapiGetMarginAllPairs', 'sapiGetMarginAllassets', 'sapiGetMarginAllorders', 'sapiGetMarginAllpairs', 'sapiGetMarginAsset', 'sapiGetMarginForceLiquidationRec', 'sapiGetMarginForceliquidationrec', 'sapiGetMarginInterestHistory', 'sapiGetMarginInteresthistory', 'sapiGetMarginIsolatedAccount', 'sapiGetMarginIsolatedAllPairs', 'sapiGetMarginIsolatedAllpairs', 'sapiGetMarginIsolatedPair', 'sapiGetMarginIsolatedTransfer', 'sapiGetMarginLoan', 'sapiGetMarginMaxBorrowable', 'sapiGetMarginMaxTransferable', 'sapiGetMarginMaxborrowable', 'sapiGetMarginMaxtransferable', 'sapiGetMarginMyTrades', 'sapiGetMarginMytrades', 'sapiGetMarginOpenOrders', 'sapiGetMarginOpenorders', 'sapiGetMarginOrder', 'sapiGetMarginPair', 'sapiGetMarginPriceIndex', 'sapiGetMarginPriceindex', 'sapiGetMarginRepay', 'sapiGetMarginTransfer', 'sapiGetMiningPaymentList', 'sapiGetMiningPubAlgoList', 'sapiGetMiningPubAlgolist', 'sapiGetMiningPubCoinList', 'sapiGetMiningPubCoinlist', 'sapiGetMiningStatisticsUserList', 'sapiGetMiningStatisticsUserStatus', 'sapiGetMiningWorkerDetail', 'sapiGetMiningWorkerList', 'sapiGetSubAccountFuturesAccount', 'sapiGetSubAccountFuturesAccountSummary', 'sapiGetSubAccountFuturesAccountsummary', 'sapiGetSubAccountFuturesInternalTransfer', 'sapiGetSubAccountFuturesInternaltransfer', 'sapiGetSubAccountFuturesPositionRisk', 'sapiGetSubAccountFuturesPositionrisk', 'sapiGetSubAccountMarginAccount', 'sapiGetSubAccountMarginAccountSummary', 'sapiGetSubAccountMarginAccountsummary', 'sapiGetSubAccountSpotSummary', 'sapiGetSubAccountSpotsummary', 'sapiGetSubAccountStatus', 'sapiGetSubAccountTransferSubUserHistory', 'sapiGetSubAccountTransferSubuserhistory', 'sapiPostAccountDisableFastWithdrawSwitch', 'sapiPostAccountDisablefastwithdrawswitch', 'sapiPostAccountEnableFastWithdrawSwitch', 'sapiPostAccountEnablefastwithdrawswitch', 'sapiPostAssetDust', 'sapiPostCapitalWithdrawApply', 'sapiPostFuturesLoanAdjustCollateral', 'sapiPostFuturesLoanAdjustcollateral', 'sapiPostFuturesLoanBorrow', 'sapiPostFuturesLoanRepay', 'sapiPostFuturesTransfer', 'sapiPostLendingCustomizedFixedPurchase', 'sapiPostLendingCustomizedfixedPurchase', 'sapiPostLendingDailyPurchase', 'sapiPostLendingDailyRedeem', 'sapiPostMarginIsolatedCreate', 'sapiPostMarginIsolatedTransfer', 'sapiPostMarginLoan', 'sapiPostMarginOrder', 'sapiPostMarginRepay', 'sapiPostMarginTransfer', 'sapiPostSubAccountFuturesEnable', 'sapiPostSubAccountFuturesInternalTransfer', 'sapiPostSubAccountFuturesInternaltransfer', 'sapiPostSubAccountFuturesTransfer', 'sapiPostSubAccountMarginEnable', 'sapiPostSubAccountMarginTransfer', 'sapiPostSubAccountTransferSubToMaster', 'sapiPostSubAccountTransferSubToSub', 'sapiPostSubAccountTransferSubtomaster', 'sapiPostSubAccountTransferSubtosub', 'sapiPostUserDataStream', 'sapiPostUserDataStreamIsolated', 'sapiPostUserdatastream', 'sapiPostUserdatastreamIsolated', 'sapiPutUserDataStream', 'sapiPutUserDataStreamIsolated', 'sapiPutUserdatastream', 'sapiPutUserdatastreamIsolated', 'sapi_delete_margin_order', 'sapi_delete_userdatastream', 'sapi_delete_userdatastream_isolated', 'sapi_get_accountsnapshot', 'sapi_get_asset_assetdividend', 'sapi_get_capital_config_getall', 'sapi_get_capital_deposit_address', 'sapi_get_capital_deposit_hisrec', 'sapi_get_capital_deposit_subaddress', 'sapi_get_capital_deposit_subhisrec', 'sapi_get_capital_withdraw_history', 'sapi_get_futures_loan_adjustcollateral_history', 'sapi_get_futures_loan_borrow_history', 'sapi_get_futures_loan_calcadjustlevel', 'sapi_get_futures_loan_calcmaxadjustamount', 'sapi_get_futures_loan_configs', 'sapi_get_futures_loan_liquidationhistory', 'sapi_get_futures_loan_repay_history', 'sapi_get_futures_loan_wallet', 'sapi_get_futures_transfer', 'sapi_get_lending_daily_product_list', 'sapi_get_lending_daily_token_position', 'sapi_get_lending_daily_userleftquota', 'sapi_get_lending_daily_userredemptionquota', 'sapi_get_lending_project_list', 'sapi_get_lending_project_position_list', 'sapi_get_lending_union_account', 'sapi_get_lending_union_interesthistory', 'sapi_get_lending_union_purchaserecord', 'sapi_get_lending_union_redemptionrecord', 'sapi_get_margin_account', 'sapi_get_margin_allassets', 'sapi_get_margin_allorders', 'sapi_get_margin_allpairs', 'sapi_get_margin_asset', 'sapi_get_margin_forceliquidationrec', 'sapi_get_margin_interesthistory', 'sapi_get_margin_isolated_account', 'sapi_get_margin_isolated_allpairs', 'sapi_get_margin_isolated_pair', 'sapi_get_margin_isolated_transfer', 'sapi_get_margin_loan', 'sapi_get_margin_maxborrowable', 'sapi_get_margin_maxtransferable', 'sapi_get_margin_mytrades', 'sapi_get_margin_openorders', 'sapi_get_margin_order', 'sapi_get_margin_pair', 'sapi_get_margin_priceindex', 'sapi_get_margin_repay', 'sapi_get_margin_transfer', 'sapi_get_mining_payment_list', 'sapi_get_mining_pub_algolist', 'sapi_get_mining_pub_coinlist', 'sapi_get_mining_statistics_user_list', 'sapi_get_mining_statistics_user_status', 'sapi_get_mining_worker_detail', 'sapi_get_mining_worker_list', 'sapi_get_sub_account_futures_account', 'sapi_get_sub_account_futures_accountsummary', 'sapi_get_sub_account_futures_internaltransfer', 'sapi_get_sub_account_futures_positionrisk', 'sapi_get_sub_account_margin_account', 'sapi_get_sub_account_margin_accountsummary', 'sapi_get_sub_account_spotsummary', 'sapi_get_sub_account_status', 'sapi_get_sub_account_transfer_subuserhistory', 'sapi_post_account_disablefastwithdrawswitch', 'sapi_post_account_enablefastwithdrawswitch', 'sapi_post_asset_dust', 'sapi_post_capital_withdraw_apply', 'sapi_post_futures_loan_adjustcollateral', 'sapi_post_futures_loan_borrow', 'sapi_post_futures_loan_repay', 'sapi_post_futures_transfer', 'sapi_post_lending_customizedfixed_purchase', 'sapi_post_lending_daily_purchase', 'sapi_post_lending_daily_redeem', 'sapi_post_margin_isolated_create', 'sapi_post_margin_isolated_transfer', 'sapi_post_margin_loan', 'sapi_post_margin_order', 'sapi_post_margin_repay', 'sapi_post_margin_transfer', 'sapi_post_sub_account_futures_enable', 'sapi_post_sub_account_futures_internaltransfer', 'sapi_post_sub_account_futures_transfer', 'sapi_post_sub_account_margin_enable', 'sapi_post_sub_account_margin_transfer', 'sapi_post_sub_account_transfer_subtomaster', 'sapi_post_sub_account_transfer_subtosub', 'sapi_post_userdatastream', 'sapi_post_userdatastream_isolated', 'sapi_put_userdatastream', 'sapi_put_userdatastream_isolated', 'sec', 'seconds', 'secret', 'session', 'setHeaders', 'setMarkets', 'setSandboxMode', 'set_headers', 'set_markets', 'set_sandbox_mode', 'sign', 'signHash', 'signMessage', 'signMessageString', 'sign_message_string', 'sleep', 'soliditySha3', 'solidityTypes', 'solidityValues', 'sortBy', 'sort_by', 'status', 'stringToBase64', 'string_to_base64', 'strip', 'substituteCommonCurrencyCodes', 'sum', 'symbols', 'throttle', 'throwBroadlyMatchedException', 'throwExactlyMatchedException', 'throw_broadly_matched_exception', 'throw_exactly_matched_exception', 'tickers', 'timeframes', 'timeout', 'toArray', 'toWei', 'to_array', 'to_wei', 'token', 'tokenBucket', 'totp', 'trades', 'transactions', 'truncate', 'truncateToString', 'truncate_to_string', 'twofa', 'uid', 'unique', 'unjson', 'urlencode', 'urlencodeWithArrayRepeat', 'urlencode_with_array_repeat', 'urls', 'usec', 'userAgent', 'userAgents', 'uuid', 'uuidv1', 'v3GetTickerBookTicker', 'v3GetTickerBookticker', 'v3GetTickerPrice', 'v3_get_ticker_bookticker', 'v3_get_ticker_price', 'verbose', 'verify', 'version', 'vwap', 'walletAddress', 'wapiGetAccountStatus', 'wapiGetAccountstatus', 'wapiGetApiTradingStatus', 'wapiGetApitradingstatus', 'wapiGetAssetDetail', 'wapiGetAssetdetail', 'wapiGetDepositAddress', 'wapiGetDepositHistory', 'wapiGetDepositaddress', 'wapiGetDeposithistory', 'wapiGetSubAccountAssets', 'wapiGetSubAccountList', 'wapiGetSubAccountTransferHistory', 'wapiGetSystemStatus', 'wapiGetSystemstatus', 'wapiGetTradeFee', 'wapiGetTradefee', 'wapiGetUserAssetDribbletLog', 'wapiGetUserassetdribbletlog', 'wapiGetWithdrawHistory', 'wapiGetWithdrawhistory', 'wapiPostSubAccountTransfer', 'wapiPostWithdraw', 'wapi_get_accountstatus', 'wapi_get_apitradingstatus', 'wapi_get_assetdetail', 'wapi_get_depositaddress', 'wapi_get_deposithistory', 'wapi_get_sub_account_assets', 'wapi_get_sub_account_list', 'wapi_get_sub_account_transfer_history', 'wapi_get_systemstatus', 'wapi_get_tradefee', 'wapi_get_userassetdribbletlog', 'wapi_get_withdrawhistory', 'wapi_post_sub_account_transfer', 'wapi_post_withdraw', 'web3', 'withdraw', 'ymd', 'ymdhms']Exception in thread Thread-1:
Traceback (most recent call last):
  File "/mnt/d/alimm-bot-newest/ccxt/base/exchange.py", line 588, in fetch
    response.raise_for_status()
  File "/usr/lib/python3/dist-packages/requests/models.py", line 940, in raise_for_status
    raise HTTPError(http_error_msg, response=self)
requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://fapi.binance.com/fapi/v1/leverage

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "market_maker.py", line 938, in run_first
    client.fapiPrivatePostLeverage({'symbol': pair.replace('/USDT', 'USDT'), 'leverage': self.lev})
  File "/mnt/d/alimm-bot-newest/ccxt/base/exchange.py", line 465, in inner
    return entry(_self, **inner_kwargs)
  File "/mnt/d/alimm-bot-newest/ccxt/binance.py", line 2400, in request
    response = self.fetch2(path, api, method, params, headers, body)
  File "/mnt/d/alimm-bot-newest/ccxt/base/exchange.py", line 486, in fetch2
    return self.fetch(request['url'], request['method'], request['headers'], request['body'])
  File "/mnt/d/alimm-bot-newest/ccxt/base/exchange.py", line 601, in fetch
    self.handle_rest_errors(http_status_code, http_status_text, http_response, url, method)
  File "/mnt/d/alimm-bot-newest/ccxt/base/exchange.py", line 634, in handle_rest_errors
    raise error(' '.join([method, url, string_code, http_status_text, body]))
ccxt.base.errors.ExchangeNotAvailable: POST https://fapi.binance.com/fapi/v1/leverage 502 Bad Gateway <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML><HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<TITLE>ERROR: The request could not be satisfied</TITLE>
</HEAD><BODY>
<H1>502 ERROR</H1>
<H2>The request could not be satisfied.</H2>
<HR noshade size="1px">
The origin closed the connection.
We can't connect to the server for this app or website at this time. There might be too much traffic or a configuration error. Try again later, or contact the app or website owner.
<BR clear="all">
If you provide content to customers through CloudFront, you can find steps to troubleshoot and help prevent this error by reviewing the CloudFront documentation.
<BR clear="all">
<HR noshade size="1px">
<PRE>
Generated by cloudfront (CloudFront)
Request ID: XhJG_SGEjw8da2581MTSCtW0TP15c48oJexg3hVyAdeaz7Z-HncnmA==
</PRE>
<ADDRESS>
</ADDRESS>
</BODY></HTML>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.8/threading.py", line 932, in _bootstrap_inner
    self.run()
  File "/usr/lib/python3.8/threading.py", line 870, in run
    self._target(*self._args, **self._kwargs)
  File "market_maker.py", line 945, in run_first
    self.creates[fut] = True
AttributeError: 'MarketMaker' object has no attribute 'creates'
50.5
placekey: 7hMrKo1CbbhS58I85uaZtfz2cKUFbDIXlZEIGzCqXEMu7V8QcqjYBonrU93GfH1U
[{"symbol": "XLMUSDT","type": "Limit","side": "buy","quantity": 6.178278833374354,"price": 0.08126,"newClientOrderId": "x-v0tiKJjj-eeruuhdavlltxhjhfceg"},{"symbol": "ADAUSDT","type": "Limit","side": "sell","quantity": 4.658503646654913,"price": 0.10777,"newClientOrderId": "x-v0tiKJjj-ezlosvvutvfznlvcoztt"},{"symbol": "DASHUSDT","type": "Limit","side": "sell","quantity": 0.007156763193157519,"price": 70.15,"newClientOrderId": "x-v0tiKJjj-fuvwotqladvlidwzdrtp"},{"symbol": "ZECUSDT","type": "Limit","side": "sell","quantity": 0.008279138159630607,"price": 60.64,"newClientOrderId": "x-v0tiKJjj-jhqvucwcxqnjhisoitms"},{"symbol": "ATOMUSDT","type": "Limit","side": "sell","quantity": 0.0962513301380368,"price": 5.216,"newClientOrderId": "x-v0tiKJjj-zyxudfdhxrhdxjyexjwc"}]
[{"symbol": "XLMUSDT","type": "Limit","side": "buy","quantity": 6.178278833374354,"price": 0.08126,"newClientOrderId": "x-v0tiKJjj-eeruuhdavlltxhjhfceg"},{"symbol": "ADAUSDT","type": "Limit","side": "sell","quantity": 4.658503646654913,"price": 0.10777,"newClientOrderId": "x-v0tiKJjj-ezlosvvutvfznlvcoztt"},{"symbol": "DASHUSDT","type": "Limit","side": "sell","quantity": 0.007156763193157519,"price": 70.15,"newClientOrderId": "x-v0tiKJjj-fuvwotqladvlidwzdrtp"},{"symbol": "ZECUSDT","type": "Limit","side": "sell","quantity": 0.008279138159630607,"price": 60.64,"newClientOrderId": "x-v0tiKJjj-jhqvucwcxqnjhisoitms"},{"symbol": "ATOMUSDT","type": "Limit","side": "sell","quantity": 0.0962513301380368,"price": 5.216,"newClientOrderId": "x-v0tiKJjj-zyxudfdhxrhdxjyexjwc"}]
[{"symbol": "XLMUSDT","type": "Limit","side": "buy","quantity": 6.178278833374354,"price": 0.08126,"newClientOrderId": "x-v0tiKJjj-eeruuhdavlltxhjhfceg"},{"symbol": "ADAUSDT","type": "Limit","side": "sell","quantity": 4.658503646654913,"price": 0.10777,"newClientOrderId": "x-v0tiKJjj-ezlosvvutvfznlvcoztt"},{"symbol": "DASHUSDT","type": "Limit","side": "sell","quantity": 0.007156763193157519,"price": 70.15,"newClientOrderId": "x-v0tiKJjj-fuvwotqladvlidwzdrtp"},{"symbol": "ZECUSDT","type": "Limit","side": "sell","quantity": 0.008279138159630607,"price": 60.64,"newClientOrderId": "x-v0tiKJjj-jhqvucwcxqnjhisoitms"},{"symbol": "ATOMUSDT","type": "Limit","side": "sell","quantity": 0.0962513301380368,"price": 5.216,"newClientOrderId": "x-v0tiKJjj-zyxudfdhxrhdxjyexjwc"}]
[{"symbol": "XLMUSDT","type": "Limit","side": "buy","quantity": 6.178278833374354,"price": 0.08126,"newClientOrderId": "x-v0tiKJjj-eeruuhdavlltxhjhfceg"},{"symbol": "ADAUSDT","type": "Limit","side": "sell","quantity": 4.658503646654913,"price": 0.10777,"newClientOrderId": "x-v0tiKJjj-ezlosvvutvfznlvcoztt"},{"symbol": "DASHUSDT","type": "Limit","side": "sell","quantity": 0.007156763193157519,"price": 70.15,"newClientOrderId": "x-v0tiKJjj-fuvwotqladvlidwzdrtp"},{"symbol": "ZECUSDT","type": "Limit","side": "sell","quantity": 0.008279138159630607,"price": 60.64,"newClientOrderId": "x-v0tiKJjj-jhqvucwcxqnjhisoitms"},{"symbol": "ATOMUSDT","type": "Limit","side": "sell","quantity": 0.0962513301380368,"price": 5.216,"newClientOrderId": "x-v0tiKJjj-zyxudfdhxrhdxjyexjwc"}]
[{"symbol": "XLMUSDT","type": "Limit","side": "buy","quantity": 6.178278833374354,"price": 0.08126,"newClientOrderId": "x-v0tiKJjj-eeruuhdavlltxhjhfceg"},{"symbol": "ADAUSDT","type": "Limit","side": "sell","quantity": 4.658503646654913,"price": 0.10777,"newClientOrderId": "x-v0tiKJjj-ezlosvvutvfznlvcoztt"},{"symbol": "DASHUSDT","type": "Limit","side": "sell","quantity": 0.007156763193157519,"price": 70.15,"newClientOrderId": "x-v0tiKJjj-fuvwotqladvlidwzdrtp"},{"symbol": "ZECUSDT","type": "Limit","side": "sell","quantity": 0.008279138159630607,"price": 60.64,"newClientOrderId": "x-v0tiKJjj-jhqvucwcxqnjhisoitms"},{"symbol": "ATOMUSDT","type": "Limit","side": "sell","quantity": 0.0962513301380368,"price": 5.216,"newClientOrderId": "x-v0tiKJjj-zyxudfdhxrhdxjyexjwc"}]
[{"symbol": "XLMUSDT","type": "Limit","side": "buy","quantity": 6.178278833374354,"price": 0.08126,"newClientOrderId": "x-v0tiKJjj-eeruuhdavlltxhjhfceg"},{"symbol": "ADAUSDT","type": "Limit","side": "sell","quantity": 4.658503646654913,"price": 0.10777,"newClientOrderId": "x-v0tiKJjj-ezlosvvutvfznlvcoztt"},{"symbol": "DASHUSDT","type": "Limit","side": "sell","quantity": 0.007156763193157519,"price": 70.15,"newClientOrderId": "x-v0tiKJjj-fuvwotqladvlidwzdrtp"},{"symbol": "ZECUSDT","type": "Limit","side": "sell","quantity": 0.008279138159630607,"price": 60.64,"newClientOrderId": "x-v0tiKJjj-jhqvucwcxqnjhisoitms"},{"symbol": "ATOMUSDT","type": "Limit","side": "sell","quantity": 0.0962513301380368,"price": 5.216,"newClientOrderId": "x-v0tiKJjj-zyxudfdhxrhdxjyexjwc"}]
[{"symbol": "XLMUSDT","type": "Limit","side": "buy","quantity": 6.178278833374354,"price": 0.08126,"newClientOrderId": "x-v0tiKJjj-eeruuhdavlltxhjhfceg"},{"symbol": "ADAUSDT","type": "Limit","side": "sell","quantity": 4.658503646654913,"price": 0.10777,"newClientOrderId": "x-v0tiKJjj-ezlosvvutvfznlvcoztt"},{"symbol": "DASHUSDT","type": "Limit","side": "sell","quantity": 0.007156763193157519,"price": 70.15,"newClientOrderId": "x-v0tiKJjj-fuvwotqladvlidwzdrtp"},{"symbol": "ZECUSDT","type": "Limit","side": "sell","quantity": 0.008279138159630607,"price": 60.64,"newClientOrderId": "x-v0tiKJjj-jhqvucwcxqnjhisoitms"},{"symbol": "ATOMUSDT","type": "Limit","side": "sell","quantity": 0.0962513301380368,"price": 5.216,"newClientOrderId": "x-v0tiKJjj-zyxudfdhxrhdxjyexjwc"}]
[{"symbol": "XLMUSDT","type": "Limit","side": "buy","quantity": 6.178278833374354,"price": 0.08126,"newClientOrderId": "x-v0tiKJjj-eeruuhdavlltxhjhfceg"},{"symbol": "ADAUSDT","type": "Limit","side": "sell","quantity": 4.658503646654913,"price": 0.10777,"newClientOrderId": "x-v0tiKJjj-ezlosvvutvfznlvcoztt"},{"symbol": "DASHUSDT","type": "Limit","side": "sell","quantity": 0.007156763193157519,"price": 70.15,"newClientOrderId": "x-v0tiKJjj-fuvwotqladvlidwzdrtp"},{"symbol": "ZECUSDT","type": "Limit","side": "sell","quantity": 0.008279138159630607,"price": 60.64,"newClientOrderId": "x-v0tiKJjj-jhqvucwcxqnjhisoitms"},{"symbol": "ATOMUSDT","type": "Limit","side": "sell","quantity": 0.0962513301380368,"price": 5.216,"newClientOrderId": "x-v0tiKJjj-zyxudfdhxrhdxjyexjwc"}]
[{"symbol": "XLMUSDT","type": "Limit","side": "buy","quantity": 6.178278833374354,"price": 0.08126,"newClientOrderId": "x-v0tiKJjj-eeruuhdavlltxhjhfceg"},{"symbol": "ADAUSDT","type": "Limit","side": "sell","quantity": 4.658503646654913,"price": 0.10777,"newClientOrderId": "x-v0tiKJjj-ezlosvvutvfznlvcoztt"},{"symbol": "DASHUSDT","type": "Limit","side": "sell","quantity": 0.007156763193157519,"price": 70.15,"newClientOrderId": "x-v0tiKJjj-fuvwotqladvlidwzdrtp"},{"symbol": "ZECUSDT","type": "Limit","side": "sell","quantity": 0.008279138159630607,"price": 60.64,"newClientOrderId": "x-v0tiKJjj-jhqvucwcxqnjhisoitms"},{"symbol": "ATOMUSDT","type": "Limit","side": "sell","quantity": 0.0962513301380368,"price": 5.216,"newClientOrderId": "x-v0tiKJjj-zyxudfdhxrhdxjyexjwc"}]
connection lost... [Failure instance: Traceback (failure with no frames): <class 'twisted.internet.error.ConnectionAborted'>: Connection was aborted locally, using.
]
[{"symbol": "XLMUSDT","type": "Limit","side": "buy","quantity": 6.178278833374354,"price": 0.08126,"newClientOrderId": "x-v0tiKJjj-eeruuhdavlltxhjhfceg"},{"symbol": "ADAUSDT","type": "Limit","side": "sell","quantity": 4.658503646654913,"price": 0.10777,"newClientOrderId": "x-v0tiKJjj-ezlosvvutvfznlvcoztt"},{"symbol": "DASHUSDT","type": "Limit","side": "sell","quantity": 0.007156763193157519,"price": 70.15,"newClientOrderId": "x-v0tiKJjj-fuvwotqladvlidwzdrtp"},{"symbol": "ZECUSDT","type": "Limit","side": "sell","quantity": 0.008279138159630607,"price": 60.64,"newClientOrderId": "x-v0tiKJjj-jhqvucwcxqnjhisoitms"},{"symbol": "ATOMUSDT","type": "Limit","side": "sell","quantity": 0.0962513301380368,"price": 5.216,"newClientOrderId": "x-v0tiKJjj-zyxudfdhxrhdxjyexjwc"}]
[{"symbol": "XLMUSDT","type": "Limit","side": "buy","quantity": 6.178278833374354,"price": 0.08126,"newClientOrderId": "x-v0tiKJjj-eeruuhdavlltxhjhfceg"},{"symbol": "ADAUSDT","type": "Limit","side": "sell","quantity": 4.658503646654913,"price": 0.10777,"newClientOrderId": "x-v0tiKJjj-ezlosvvutvfznlvcoztt"},{"symbol": "DASHUSDT","type": "Limit","side": "sell","quantity": 0.007156763193157519,"price": 70.15,"newClientOrderId": "x-v0tiKJjj-fuvwotqladvlidwzdrtp"},{"symbol": "ZECUSDT","type": "Limit","side": "sell","quantity": 0.008279138159630607,"price": 60.64,"newClientOrderId": "x-v0tiKJjj-jhqvucwcxqnjhisoitms"},{"symbol": "ATOMUSDT","type": "Limit","side": "sell","quantity": 0.0962513301380368,"price": 5.216,"newClientOrderId": "x-v0tiKJjj-zyxudfdhxrhdxjyexjwc"}]['XRP/USDT', 'TRX/USDT', 'VET/USDT', 'IOST/USDT', 'DOGE/USDT', 'RSR/USDT', 'AKRO/USDT', 'CHZ/USDT', 'REEF/USDT', 'STMX/USDT', 'DENT/USDT', 'HOT/USDT', 'BTT/USDT', 'SC/USDT']
Avg/total volume for all coin margined futures last 24hr has been: $838953082.4265/$94801698314.196
# instruments total: 113, # instruments above avg vol: 14
Outliers of volume: 21797220791.0 and 1501.519
# instruments total: 111, # instruments above avg vol less outliers: 16
50.5
[OrderedDict([('ADAUSDT', None), ('AKROUSDT', None), ('BTTUSDT', None), ('CHZUSDT', None), ('DENTUSDT', None), ('DGBUSDT', None), ('DOGEUSDT', None), ('HOTUSDT', None), ('IOSTUSDT', None), ('REEFUSDT', None), ('RSRUSDT', None), ('SCUSDT', None), ('STMXUSDT', None), ('TRXUSDT', None), ('VETUSDT', None), ('XRPUSDT', None), ('btc', None), ('timestamp', None)]), OrderedDict([('ADAUSDT', None), ('AKROUSDT', None), ('BTTUSDT', None), ('CHZUSDT', None), ('DENTUSDT', None), ('DGBUSDT', None), ('DOGEUSDT', None), ('HOTUSDT', None), ('IOSTUSDT', None), ('REEFUSDT', None), ('RSRUSDT', None), ('SCUSDT', None), ('STMXUSDT', None), ('TRXUSDT', None), ('VETUSDT', None), ('XRPUSDT', None), ('btc', None), ('timestamp', None)]), OrderedDict([('ADAUSDT', None), ('AKROUSDT', None), ('BTTUSDT', None), ('CHZUSDT', None), ('DENTUSDT', None), ('DGBUSDT', None), ('DOGEUSDT', None), ('HOTUSDT', None), ('IOSTUSDT', None), ('REEFUSDT', None), ('RSRUSDT', None), ('SCUSDT', None), ('STMXUSDT', None), ('TRXUSDT', None), ('VETUSDT', None), ('XRPUSDT', None), ('btc', None), ('timestamp', None)])]
placekey: MQsPcSHk1AZ96FQSUlScuZHZFSITb10TrUeuNXQuq2zF5IgsZefp7p3noI4ZOVST
18.7960004
18.272510964912282
True
18.7960004
18.276013011350326
True
18.7960004
18.27990574879124
True
18.7960004
18.284189675742468
True
18.7960004
18.275234662805307
True
18.7960004
18.279127068646037
True
18.7960004
18.282631651825657
True
18.7960004
18.286916856661907
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7960004
18.273678164590653
True
18.7960004
18.277569907358107
True
18.7960004
18.281463308126533
True
18.7960004
18.285747965227767
True
18.7929644
18.2705659634258
True
18.7929644
18.274456380554906
True
18.7929644
18.277959172807428
True
18.7929644
18.282242187333573
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7926372
18.27095493059695
True
18.7926372
18.274845513393807
True
18.7926372
18.278348454837815
True
18.7926372
18.282631651825657
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7926372
18.269010260340167
True
18.7926372
18.27290001490408
True
18.7926372
18.276791426198436
True
18.7926372
18.280684495281914
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7963684
18.273678164590653
True
18.7963684
18.277569907358107
True
18.7963684
18.281463308126533
True
18.7963684
18.285747965227767
True
18.7963684
18.268621375963217
True
18.7963684
18.272510964912282
True
18.7963684
18.276013011350326
True
18.7963684
18.280295113742863
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.8002716
18.264733442581083
True
18.8002716
18.268621375963217
True
18.8002716
18.272510964912282
True
18.8002716
18.276791426198436
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7980776
18.26434474025836
True
18.7980776
18.268232508141935
True
18.7980776
18.271732914626355
True
18.7980776
18.276013011350326
True
18.7980776
18.26434474025836
True
18.7980776
18.268232508141935
True
18.7980776
18.271732914626355
True
18.7980776
18.276013011350326
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7980776
18.26434474025836
True
18.7980776
18.268232508141935
True
18.7980776
18.271732914626355
True
18.7980776
18.276013011350326
True
{'MQsPcSHk1AZ96FQSUlScuZHZFSITb10TrUeuNXQuq2zF5IgsZefp7p3noI4ZOVST': OrderedDict([('XRP/USDT', {'symbol': 'XRPUSDT', 'positionAmt': 23.6, 'entryPrice': 1.30926, 'markPrice': '1.19370496', 'unRealizedProfit': -2.72709894, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '2000000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '28.17143705', 'isolatedWallet': '0', 'updateTime': 1619048241918, 'ROE': 0}), ('TRX/USDT', {'symbol': 'TRXUSDT', 'positionAmt': 191.0, 'entryPrice': 0.12349, 'markPrice': '0.11429000', 'unRealizedProfit': -1.7572, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '2000000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '21.82939000', 'isolatedWallet': '0', 'updateTime': 1619049695492, 'ROE': 0}), ('VET/USDT', {'symbol': 'VETUSDT', 'positionAmt': -89.0, 'entryPrice': 0.229456, 'markPrice': '0.19545080', 'unRealizedProfit': 3.0264628, 'liquidationPrice': '4.69933949', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '-17.39512120', 'isolatedWallet': '0', 'updateTime': 1619126260340, 'ROE': 74.11443239767124}), ('IOST/USDT', {'symbol': 'IOSTUSDT', 'positionAmt': 4034.0, 'entryPrice': 0.06387, 'markPrice': '0.05282190', 'unRealizedProfit': -44.5680354, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '213.08354460', 'isolatedWallet': '0', 'updateTime': 1619049968045, 'ROE': 0}), ('DOGE/USDT', {'symbol': 'DOGEUSDT', 'positionAmt': 39.0, 'entryPrice': 0.309487, 'markPrice': '0.26775500', 'unRealizedProfit': -1.627548, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '10.44244500', 'isolatedWallet': '0', 'updateTime': 1619048258336, 'ROE': 0}), ('RSR/USDT', {'symbol': 'RSRUSDT', 'positionAmt': -1026.0, 'entryPrice': 0.093702, 'markPrice': '0.08809419', 'unRealizedProfit': 5.75361306, 'liquidationPrice': '0.47878239', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '-90.38463894', 'isolatedWallet': '0', 'updateTime': 1619126266203, 'ROE': 29.929626829508837}), ('AKRO/USDT', {'symbol': 'AKROUSDT', 'positionAmt': 10352.0, 'entryPrice': 0.04989, 'markPrice': '0.04550780', 'unRealizedProfit': -45.3645344, 'liquidationPrice': '0.00592397', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '471.09674560', 'isolatedWallet': '0', 'updateTime': 1619053284157, 'ROE': 0}), ('CHZ/USDT', {'symbol': 'CHZUSDT', 'positionAmt': 40.0, 'entryPrice': 0.52443, 'markPrice': '0.46995194', 'unRealizedProfit': -2.1791224, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '18.79807760', 'isolatedWallet': '0', 'updateTime': 1619048357600, 'ROE': 0}), ('REEF/USDT', {'symbol': 'REEFUSDT', 'positionAmt': 14219.0, 'entryPrice': 0.03412, 'markPrice': '0.03417929', 'unRealizedProfit': 0.84304451, 'liquidationPrice': '0.00541890', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '485.99532451', 'isolatedWallet': '0', 'updateTime': 1619126264774, 'ROE': 0.8690190558627853}), ('STMX/USDT', {'symbol': 'STMXUSDT', 'positionAmt': 0.0, 'entryPrice': 0.0, 'markPrice': '0.00000000', 'unRealizedProfit': 0.0, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '0', 'isolatedWallet': '0', 'updateTime': 0, 'ROE': 0}), ('DENT/USDT', {'symbol': 'DENTUSDT', 'positionAmt': 25575.0, 'entryPrice': 0.008962, 'markPrice': '0.00725936', 'unRealizedProfit': -43.545018, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '185.65813200', 'isolatedWallet': '0', 'updateTime': 1619044218053, 'ROE': 0}), ('HOT/USDT', {'symbol': 'HOTUSDT', 'positionAmt': 21366.0, 'entryPrice': 0.015824, 'markPrice': '0.01282305', 'unRealizedProfit': -64.1182977, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '273.97728630', 'isolatedWallet': '0', 'updateTime': 1619053284019, 'ROE': 0}), ('BTT/USDT', {'symbol': 'BTTUSDT', 'positionAmt': 8394.0, 'entryPrice': 0.007824, 'markPrice': '0.00667266', 'unRealizedProfit': -9.66434796, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '56.01030804', 'isolatedWallet': '0', 'updateTime': 1619043667555, 'ROE': 0}), ('SC/USDT', {'symbol': 'SCUSDT', 'positionAmt': 8353.0, 'entryPrice': 0.043928, 'markPrice': '0.03592527', 'unRealizedProfit': -66.84680369, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '300.08378031', 'isolatedWallet': '0', 'updateTime': 1619045136468, 'ROE': 0}), ('ADA/USDT', {'symbol': 'ADAUSDT', 'positionAmt': 3.0, 'entryPrice': 1.27168, 'markPrice': '1.16396040', 'unRealizedProfit': -0.3231588, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '2000000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '3.49188120', 'isolatedWallet': '0', 'updateTime': 1618973357682, 'ROE': 0}), ('DGB/USDT', {'symbol': 'DGBUSDT', 'positionAmt': 0.0, 'entryPrice': 0.0, 'markPrice': '0.00000000', 'unRealizedProfit': 0.0, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '0', 'isolatedWallet': '0', 'updateTime': 0, 'ROE': 0})])}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7963156
18.263956054479678
True
18.7963156
18.26745482216215
True
18.7963156
18.271343914330117
True
18.7963156
18.275623828790458
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7963156
18.263956054479678
True
18.7963156
18.26745482216215
True
18.7963156
18.271343914330117
True
18.7963156
18.275623828790458
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.8018416
18.2771806584888
True
18.8018416
18.28107389340945
True
18.8018416
18.284579223214095
True
18.8018416
18.288865341175466
True
18.8018416
18.26745482216215
True
18.8018416
18.271343914330117
True
18.8018416
18.275234662805307
True
18.8018416
18.279516400425987
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7864716
18.264733442581083
True
18.7864716
18.268621375963217
True
18.7864716
18.272510964912282
True
18.7864716
18.276791426198436
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7923928
18.274456380554906
True
18.7923928
18.277959172807428
True
18.7923928
18.281852739434218
True
18.7923928
18.286137579102125
True
binance does not have market symbol REEF/USDT
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7923928
18.2701770128156
True
18.7923928
18.273678164590653
True
18.7923928
18.277569907358107
True
18.7923928
18.281852739434218
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7985476
18.268232508141935
True
18.7985476
18.271732914626355
True
18.7985476
18.275623828790458
True
18.7985476
18.27990574879124
True
18.8008584
18.263956054479678
True
18.8008584
18.26745482216215
True
18.8008584
18.271343914330117
True
18.8008584
18.275623828790458
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7989892
18.26317873255022
True
18.7989892
18.26706600400153
True
18.7989892
18.27095493059695
True
18.7989892
18.275234662805307
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7989892
18.26434474025836
True
18.7989892
18.268232508141935
True
18.7989892
18.271732914626355
True
18.7989892
18.276013011350326
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7924452
18.260458626779293
True
18.7924452
18.26434474025836
True
18.7924452
18.268232508141935
True
18.7924452
18.272510964912282
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.791092
18.260458626779293
True
18.791092
18.26434474025836
True
18.791092
18.268232508141935
True
18.791092
18.272510964912282
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7984604
18.25385602773524
True
18.7984604
18.257739331149217
True
18.7984604
18.261624287173376
True
18.7984604
18.265899648824092
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7984604
18.252303168864312
True
18.7984604
18.25618581152946
True
18.7984604
18.26007010638298
True
18.7984604
18.26434474025836
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7994152
18.246482300414584
True
18.7994152
18.249974375877173
True
18.7994152
18.25385602773524
True
18.7994152
18.258127752366768
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7994152
18.246482300414584
True
18.7994152
18.249974375877173
True
18.7994152
18.25385602773524
True
18.7994152
18.258127752366768
True
18.7952448
18.25657416664894
True
18.7952448
18.260458626779293
True
18.7952448
18.26434474025836
True
18.7952448
18.268621375963217
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7996344
18.251138698083917
True
18.7996344
18.254632556259835
True
18.7996344
18.25851619011148
True
18.7996344
18.262790096397335
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.8000816
18.25618581152946
True
18.8000816
18.26007010638298
True
18.8000816
18.263956054479678
True
18.8000816
18.267843656875264
True
18.8000816
18.25618581152946
True
18.8000816
18.26007010638298
True
18.8000816
18.263956054479678
True
18.8000816
18.267843656875264
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.802856
18.25851619011148
True
18.802856
18.26240147678427
True
18.802856
18.26628841733356
True
18.802856
18.2705659634258
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.802856
18.258127752366768
True
18.802856
18.26201287370997
True
18.802856
18.265899648824092
True
18.802856
18.2701770128156
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
{'MQsPcSHk1AZ96FQSUlScuZHZFSITb10TrUeuNXQuq2zF5IgsZefp7p3noI4ZOVST': OrderedDict([('XRP/USDT', {'symbol': 'XRPUSDT', 'positionAmt': 23.6, 'entryPrice': 1.30926, 'markPrice': '1.19400000', 'unRealizedProfit': -2.720136, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '2000000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 28.1784, 'isolatedWallet': '0', 'updateTime': 1619048241918, 'ROE': 0}), ('TRX/USDT', {'symbol': 'TRXUSDT', 'positionAmt': 191.0, 'entryPrice': 0.12349, 'markPrice': '0.11443000', 'unRealizedProfit': -1.73046, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '2000000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 21.85613, 'isolatedWallet': '0', 'updateTime': 1619049695492, 'ROE': 0}), ('VET/USDT', {'symbol': 'VETUSDT', 'positionAmt': -2.0, 'entryPrice': 0.229456, 'markPrice': '0.19598573', 'unRealizedProfit': 0.06694054, 'liquidationPrice': '204.12866557', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': -0.39197146, 'isolatedWallet': '0', 'updateTime': 1619126271004, 'ROE': 72.9339611951747}), ('IOST/USDT', {'symbol': 'IOSTUSDT', 'positionAmt': 4034.0, 'entryPrice': 0.06387, 'markPrice': '0.05288361', 'unRealizedProfit': -44.31909726, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 213.33248274, 'isolatedWallet': '0', 'updateTime': 1619049968045, 'ROE': 0}), ('DOGE/USDT', {'symbol': 'DOGEUSDT', 'positionAmt': 39.0, 'entryPrice': 0.309487, 'markPrice': '0.26875500', 'unRealizedProfit': -1.588548, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 10.481445, 'isolatedWallet': '0', 'updateTime': 1619048258336, 'ROE': 0}), ('RSR/USDT', {'symbol': 'RSRUSDT', 'positionAmt': -1026.0, 'entryPrice': 0.093702, 'markPrice': '0.08836500', 'unRealizedProfit': 5.475762, 'liquidationPrice': '0.48589459', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': -90.66249, 'isolatedWallet': '0', 'updateTime': 1619126266203, 'ROE': 28.478581033489213}), ('AKRO/USDT', {'symbol': 'AKROUSDT', 'positionAmt': 10352.0, 'entryPrice': 0.04989, 'markPrice': '0.04573610', 'unRealizedProfit': -43.0011728, 'liquidationPrice': '0.00545911', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 473.4601072, 'isolatedWallet': '0', 'updateTime': 1619053284157, 'ROE': 0}), ('CHZ/USDT', {'symbol': 'CHZUSDT', 'positionAmt': 40.0, 'entryPrice': 0.52443, 'markPrice': '0.47007140', 'unRealizedProfit': -2.174344, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 18.802856, 'isolatedWallet': '0', 'updateTime': 1619048357600, 'ROE': 0}), ('REEF/USDT', {'symbol': 'REEFUSDT', 'positionAmt': 14219.0, 'entryPrice': 0.03412, 'markPrice': '0.03420188', 'unRealizedProfit': 1.16425172, 'liquidationPrice': '0.00493786', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 486.31653172, 'isolatedWallet': '0', 'updateTime': 1619126264774, 'ROE': 1.1998827667056844}), ('STMX/USDT', {'symbol': 'STMXUSDT', 'positionAmt': 0.0, 'entryPrice': 0.0, 'markPrice': '0.00000000', 'unRealizedProfit': 0.0, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 0.0, 'isolatedWallet': '0', 'updateTime': 0, 'ROE': 0}), ('DENT/USDT', {'symbol': 'DENTUSDT', 'positionAmt': 25575.0, 'entryPrice': 0.008962, 'markPrice': '0.00726730', 'unRealizedProfit': -43.3419525, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 185.8611975, 'isolatedWallet': '0', 'updateTime': 1619044218053, 'ROE': 0}), ('HOT/USDT', {'symbol': 'HOTUSDT', 'positionAmt': 21366.0, 'entryPrice': 0.015824, 'markPrice': '0.01290857', 'unRealizedProfit': -62.29107738, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 275.80450662, 'isolatedWallet': '0', 'updateTime': 1619053284019, 'ROE': 0}), ('BTT/USDT', {'symbol': 'BTTUSDT', 'positionAmt': 8394.0, 'entryPrice': 0.007824, 'markPrice': '0.00672864', 'unRealizedProfit': -9.19445184, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 56.48020416, 'isolatedWallet': '0', 'updateTime': 1619043667555, 'ROE': 0}), ('SC/USDT', {'symbol': 'SCUSDT', 'positionAmt': 8353.0, 'entryPrice': 0.043928, 'markPrice': '0.03608561', 'unRealizedProfit': -65.50748367, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 301.42310033, 'isolatedWallet': '0', 'updateTime': 1619045136468, 'ROE': 0}), ('ADA/USDT', {'symbol': 'ADAUSDT', 'positionAmt': 3.0, 'entryPrice': 1.27168, 'markPrice': '1.16483677', 'unRealizedProfit': -0.32052969, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '2000000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 3.49451031, 'isolatedWallet': '0', 'updateTime': 1618973357682, 'ROE': 0}), ('DGB/USDT', {'symbol': 'DGBUSDT', 'positionAmt': 0.0, 'entryPrice': 0.0, 'markPrice': '0.00000000', 'unRealizedProfit': 0.0, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 0.0, 'isolatedWallet': '0', 'updateTime': 0, 'ROE': 0})])}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.8081108
18.2457064651232
True
18.8081108
18.249586301486378
True
18.8081108
18.253467788246805
True
18.8081108
18.257739331149217
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.8081108
18.25075057417489
True
18.8081108
18.254244283739233
True
18.8081108
18.258127752366768
True
18.8081108
18.26240147678427
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}['XRP/USDT', 'TRX/USDT', 'VET/USDT', 'IOST/USDT', 'DOGE/USDT', 'RSR/USDT', 'AKRO/USDT', 'CHZ/USDT', 'REEF/USDT', 'STMX/USDT', 'DENT/USDT', 'HOT/USDT', 'BTT/USDT', 'SC/USDT']
Avg/total volume for all coin margined futures last 24hr has been: $841789147.6345/$95122173682.695
# instruments total: 113, # instruments above avg vol: 14
Outliers of volume: 21895242030.0 and 1502.221
# instruments total: 111, # instruments above avg vol less outliers: 16
50.5
[OrderedDict([('ADAUSDT', None), ('AKROUSDT', None), ('BTTUSDT', None), ('CHZUSDT', None), ('DENTUSDT', None), ('DGBUSDT', None), ('DOGEUSDT', None), ('HOTUSDT', None), ('IOSTUSDT', None), ('REEFUSDT', None), ('RSRUSDT', None), ('SCUSDT', None), ('STMXUSDT', None), ('TRXUSDT', None), ('VETUSDT', None), ('XRPUSDT', None), ('btc', None), ('timestamp', None)]), OrderedDict([('ADAUSDT', None), ('AKROUSDT', None), ('BTTUSDT', None), ('CHZUSDT', None), ('DENTUSDT', None), ('DGBUSDT', None), ('DOGEUSDT', None), ('HOTUSDT', None), ('IOSTUSDT', None), ('REEFUSDT', None), ('RSRUSDT', None), ('SCUSDT', None), ('STMXUSDT', None), ('TRXUSDT', None), ('VETUSDT', None), ('XRPUSDT', None), ('btc', None), ('timestamp', None)]), OrderedDict([('ADAUSDT', None), ('AKROUSDT', None), ('BTTUSDT', None), ('CHZUSDT', None), ('DENTUSDT', None), ('DGBUSDT', None), ('DOGEUSDT', None), ('HOTUSDT', None), ('IOSTUSDT', None), ('REEFUSDT', None), ('RSRUSDT', None), ('SCUSDT', None), ('STMXUSDT', None), ('TRXUSDT', None), ('VETUSDT', None), ('XRPUSDT', None), ('btc', None), ('timestamp', None)])]
placekey: MQsPcSHk1AZ96FQSUlScuZHZFSITb10TrUeuNXQuq2zF5IgsZefp7p3noI4ZOVST
connection lost... [Failure instance: Traceback (failure with no frames): <class 'twisted.internet.error.ConnectionDone'>: Connection was closed cleanly.
]
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7857556
17.806383402099165
True
18.7857556
17.81017514064862
True
18.7857556
17.813968494387765
True
18.7857556
17.818143050276948
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
connection lost... [Failure instance: Traceback (failure with no frames): <class 'twisted.internet.error.ConnectionDone'>: Connection was closed cleanly.
]
18.7820936
17.808279069539665
True
18.7820936
17.812071615554988
True
18.7820936
17.81586577727602
True
18.7820936
17.820041222541814
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
18.7820936
17.81700434100931
True
18.7820936
17.820800604691794
True
18.7820936
17.824598486456534
True
18.7820936
17.828778026517735
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7576332
17.816245282351687
True
18.7576332
17.820041222541814
True
18.7576332
17.823458951966924
True
18.7576332
17.827637957582862
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7789048
17.8124509590033
True
18.7789048
17.816245282351687
True
18.7789048
17.820041222541814
True
18.7789048
17.824218625436878
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
18.7801688
17.81700434100931
True
18.7801688
17.820800604691794
True
18.7801688
17.824598486456534
True
18.7801688
17.828778026517735
True
connection lost... [Failure instance: Traceback (failure with no frames): <class 'twisted.internet.error.ConnectionDone'>: Connection was closed cleanly.
]
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
18.7801688
17.81472735904918
True
18.7801688
17.81852265237862
True
18.7801688
17.822319563169895
True
18.7801688
17.82611809245721
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
{'MQsPcSHk1AZ96FQSUlScuZHZFSITb10TrUeuNXQuq2zF5IgsZefp7p3noI4ZOVST': OrderedDict([('XRP/USDT', {'symbol': 'XRPUSDT', 'positionAmt': 23.6, 'entryPrice': 1.30926, 'markPrice': '1.19290000', 'unRealizedProfit': -2.746096, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '2000000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 28.15244, 'isolatedWallet': '0', 'updateTime': 1619048241918, 'ROE': 0}), ('TRX/USDT', {'symbol': 'TRXUSDT', 'positionAmt': 191.0, 'entryPrice': 0.12349, 'markPrice': '0.11376404', 'unRealizedProfit': -1.85765836, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '2000000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 21.72893164, 'isolatedWallet': '0', 'updateTime': 1619049695492, 'ROE': -39.37954490242124}), ('VET/USDT', {'symbol': 'VETUSDT', 'positionAmt': -2.0, 'entryPrice': 0.229456, 'markPrice': '0.19552083', 'unRealizedProfit': 0.06787034, 'liquidationPrice': '199.90800950', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': -0.39104166, 'isolatedWallet': '0', 'updateTime': 1619126271004, 'ROE': 73.94700944843457}), ('IOST/USDT', {'symbol': 'IOSTUSDT', 'positionAmt': 4034.0, 'entryPrice': 0.06387, 'markPrice': '0.05286653', 'unRealizedProfit': -44.38799798, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 213.26358202, 'isolatedWallet': '0', 'updateTime': 1619049968045, 'ROE': -86.13958039768278}), ('DOGE/USDT', {'symbol': 'DOGEUSDT', 'positionAmt': 39.0, 'entryPrice': 0.309487, 'markPrice': '0.26776300', 'unRealizedProfit': -1.627236, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 10.442757, 'isolatedWallet': '0', 'updateTime': 1619048258336, 'ROE': -67.4083240976196}), ('RSR/USDT', {'symbol': 'RSRUSDT', 'positionAmt': -929.0, 'entryPrice': 0.093702, 'markPrice': '0.08870635', 'unRealizedProfit': 4.64095885, 'liquidationPrice': '0.51865789', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': -82.40819915, 'isolatedWallet': '0', 'updateTime': 1619126314556, 'ROE': 26.65711510960278}), ('AKRO/USDT', {'symbol': 'AKROUSDT', 'positionAmt': 10352.0, 'entryPrice': 0.04989, 'markPrice': '0.04564574', 'unRealizedProfit': -43.93657952, 'liquidationPrice': '0.00620225', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 472.52470048, 'isolatedWallet': '0', 'updateTime': 1619053284157, 'ROE': -42.536179595109246}), ('CHZ/USDT', {'symbol': 'CHZUSDT', 'positionAmt': 40.0, 'entryPrice': 0.52443, 'markPrice': '0.46950422', 'unRealizedProfit': -2.1970312, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 18.7801688, 'isolatedWallet': '0', 'updateTime': 1619048357600, 'ROE': -52.36712239955765}), ('REEF/USDT', {'symbol': 'REEFUSDT', 'positionAmt': 14219.0, 'entryPrice': 0.03412, 'markPrice': '0.03411406', 'unRealizedProfit': -0.08446086, 'liquidationPrice': '0.00545563', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 485.06781914, 'isolatedWallet': '0', 'updateTime': 1619126264774, 'ROE': -0.08704572098472418}), ('STMX/USDT', {'symbol': 'STMXUSDT', 'positionAmt': 0.0, 'entryPrice': 0.0, 'markPrice': '0.00000000', 'unRealizedProfit': 0.0, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 0.0, 'isolatedWallet': '0', 'updateTime': 0, 'ROE': 0}), ('DENT/USDT', {'symbol': 'DENTUSDT', 'positionAmt': 25575.0, 'entryPrice': 0.008962, 'markPrice': '0.00722906', 'unRealizedProfit': -44.3199405, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 184.8832095, 'isolatedWallet': '0', 'updateTime': 1619044218053, 'ROE': -96.6826601205088}), ('HOT/USDT', {'symbol': 'HOTUSDT', 'positionAmt': 21366.0, 'entryPrice': 0.015824, 'markPrice': '0.01277922', 'unRealizedProfit': -65.05476948, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 273.04081452, 'isolatedWallet': '0', 'updateTime': 1619053284019, 'ROE': 0}), ('BTT/USDT', {'symbol': 'BTTUSDT', 'positionAmt': 8394.0, 'entryPrice': 0.007824, 'markPrice': '0.00660575', 'unRealizedProfit': -10.2259905, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 55.4486655, 'isolatedWallet': '0', 'updateTime': 1619043667555, 'ROE': -77.85339979550105}), ('SC/USDT', {'symbol': 'SCUSDT', 'positionAmt': 8353.0, 'entryPrice': 0.043928, 'markPrice': '0.03599517', 'unRealizedProfit': -66.26292899, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 300.66765501, 'isolatedWallet': '0', 'updateTime': 1619045136468, 'ROE': -90.29354853396471}), ('ADA/USDT', {'symbol': 'ADAUSDT', 'positionAmt': 3.0, 'entryPrice': 1.27168, 'markPrice': '1.16518199', 'unRealizedProfit': -0.31949403, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '2000000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 3.49554597, 'isolatedWallet': '0', 'updateTime': 1618973357682, 'ROE': -41.87295939229996}), ('DGB/USDT', {'symbol': 'DGBUSDT', 'positionAmt': 0.0, 'entryPrice': 0.0, 'markPrice': '0.00000000', 'unRealizedProfit': 0.0, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': 0.0, 'isolatedWallet': '0', 'updateTime': 0, 'ROE': 0})])}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.8114672
17.801835446438073
True
18.8114672
17.80562524812126
True
18.8114672
17.809416663756572
True
18.8114672
17.813209694375225
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
18.780648
17.825738166666664
True
18.780648
17.829538153485395
True
18.780648
17.83333976076759
True
18.780648
17.837523401650706
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
18.7705512
17.829158081899767
True
18.7705512
17.832959527088974
True
18.7705512
17.83638221402371
True
18.7705512
17.84056728269448
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.775654
17.828778026517735
True
18.775654
17.8321991083726
True
18.775654
17.836001850596038
True
18.775654
17.840186740753378
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.767446
17.828397987338263
True
18.767446
17.83181892333276
True
18.767446
17.835621503390623
True
18.767446
17.839806215045964
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.767446
17.824218625436878
True
18.767446
17.827637957582862
True
18.767446
17.831438754503782
True
18.767446
17.835621503390623
True
18.7610716
17.827257967004858
True
18.7610716
17.83105860188462
True
18.7610716
17.834860857642443
True
18.7610716
17.838664735315444
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7613072
17.829158081899767
True
18.7613072
17.832959527088974
True
18.7613072
17.836762593674692
True
18.7613072
17.84056728269448
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
18.7613072
17.829158081899767
True
18.7613072
17.832959527088974
True
18.7613072
17.836762593674692
True
18.7613072
17.84056728269448
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.75436
17.829158081899767
True
18.75436
17.832959527088974
True
18.75436
17.836762593674692
True
18.75436
17.84056728269448
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7561736
17.829158081899767
True
18.7561736
17.832959527088974
True
18.7561736
17.836762593674692
True
18.7561736
17.84056728269448
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
18.7561736
17.829158081899767
True
18.7561736
17.832959527088974
True
18.7561736
17.83638221402371
True
18.7561736
17.84056728269448
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.75264
17.829158081899767
True
18.75264
17.832959527088974
True
18.75264
17.83638221402371
True
18.75264
17.84056728269448
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7547744
17.825738166666664
True
18.7547744
17.829538153485395
True
18.7547744
17.83333976076759
True
18.7547744
17.837523401650706
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-2019,"msg":"Margin is insufficient."}
18.7609492
17.824218625436878
True
18.7609492
17.827637957582862
True
18.7609492
17.831438754503782
True
18.7609492
17.835621503390623
True
EXCEPTION IN (/home/ubuntu/Desktop/bot/strategies/mm.py, LINE 848 "o = self.client.createOrder(fut.replace('/',''), type, dir, qty, prc, {"timeInForce": 'GTX', "newClientOrderId": brokerPhrase} )"): binance {"code":-1106,"msg":"Parameter 'timeInForce' sent when not required."}
{'MQsPcSHk1AZ96FQSUlScuZHZFSITb10TrUeuNXQuq2zF5IgsZefp7p3noI4ZOVST': OrderedDict([('XRP/USDT', {'symbol': 'XRPUSDT', 'positionAmt': 23.6, 'entryPrice': 1.30926, 'markPrice': '1.19330000', 'unRealizedProfit': -2.736656, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '2000000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '28.16188000', 'isolatedWallet': '0', 'updateTime': 1619048241918, 'ROE': 0}), ('TRX/USDT', {'symbol': 'TRXUSDT', 'positionAmt': 191.0, 'entryPrice': 0.12349, 'markPrice': '0.11406729', 'unRealizedProfit': -1.79973761, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '2000000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '21.78685239', 'isolatedWallet': '0', 'updateTime': 1619049695492, 'ROE': 0}), ('VET/USDT', {'symbol': 'VETUSDT', 'positionAmt': -2.0, 'entryPrice': 0.229456, 'markPrice': '0.19461814', 'unRealizedProfit': 0.06967572, 'liquidationPrice': '201.29645884', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '-0.38923628', 'isolatedWallet': '0', 'updateTime': 1619126271004, 'ROE': 75.9292172917535}), ('IOST/USDT', {'symbol': 'IOSTUSDT', 'positionAmt': 4034.0, 'entryPrice': 0.06387, 'markPrice': '0.05277100', 'unRealizedProfit': -44.773366, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '212.87821400', 'isolatedWallet': '0', 'updateTime': 1619049968045, 'ROE': 0}), ('DOGE/USDT', {'symbol': 'DOGEUSDT', 'positionAmt': 39.0, 'entryPrice': 0.309487, 'markPrice': '0.26680600', 'unRealizedProfit': -1.664559, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '10.40543400', 'isolatedWallet': '0', 'updateTime': 1619048258336, 'ROE': 0}), ('RSR/USDT', {'symbol': 'RSRUSDT', 'positionAmt': -835.0, 'entryPrice': 0.093702, 'markPrice': '0.08836112', 'unRealizedProfit': 4.4596348, 'liquidationPrice': '0.57004218', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '-73.78153520', 'isolatedWallet': '0', 'updateTime': 1619126346646, 'ROE': 28.50498596442952}), ('AKRO/USDT', {'symbol': 'AKROUSDT', 'positionAmt': 10352.0, 'entryPrice': 0.04989, 'markPrice': '0.04563390', 'unRealizedProfit': -44.0591472, 'liquidationPrice': '0.00591601', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '472.40213280', 'isolatedWallet': '0', 'updateTime': 1619053284157, 'ROE': 0}), ('CHZ/USDT', {'symbol': 'CHZUSDT', 'positionAmt': 40.0, 'entryPrice': 0.52443, 'markPrice': '0.46902373', 'unRealizedProfit': -2.2162508, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '18.76094920', 'isolatedWallet': '0', 'updateTime': 1619048357600, 'ROE': -52.83579645586084}), ('REEF/USDT', {'symbol': 'REEFUSDT', 'positionAmt': 14219.0, 'entryPrice': 0.03412, 'markPrice': '0.03415879', 'unRealizedProfit': 0.55155501, 'liquidationPrice': '0.00530099', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '485.70383501', 'isolatedWallet': '0', 'updateTime': 1619126264774, 'ROE': 0.5685486452507993}), ('STMX/USDT', {'symbol': 'STMXUSDT', 'positionAmt': 0.0, 'entryPrice': 0.0, 'markPrice': '0.00000000', 'unRealizedProfit': 0.0, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '0', 'isolatedWallet': '0', 'updateTime': 0, 'ROE': 0}), ('DENT/USDT', {'symbol': 'DENTUSDT', 'positionAmt': 25575.0, 'entryPrice': 0.008962, 'markPrice': '0.00719209', 'unRealizedProfit': -45.26544825, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '183.93770175', 'isolatedWallet': '0', 'updateTime': 1619044218053, 'ROE': 0}), ('HOT/USDT', {'symbol': 'HOTUSDT', 'positionAmt': 21366.0, 'entryPrice': 0.015824, 'markPrice': '0.01293538', 'unRealizedProfit': -61.71825492, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '276.37732908', 'isolatedWallet': '0', 'updateTime': 1619053284019, 'ROE': 0}), ('BTT/USDT', {'symbol': 'BTTUSDT', 'positionAmt': 8394.0, 'entryPrice': 0.007824, 'markPrice': '0.00664106', 'unRealizedProfit': -9.92959836, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '55.74505764', 'isolatedWallet': '0', 'updateTime': 1619043667555, 'ROE': 0}), ('SC/USDT', {'symbol': 'SCUSDT', 'positionAmt': 8353.0, 'entryPrice': 0.043928, 'markPrice': '0.03595418', 'unRealizedProfit': -66.60531846, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '300.32526554', 'isolatedWallet': '0', 'updateTime': 1619045136468, 'ROE': 0}), ('ADA/USDT', {'symbol': 'ADAUSDT', 'positionAmt': 3.0, 'entryPrice': 1.27168, 'markPrice': '1.16315666', 'unRealizedProfit': -0.32557002, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '2000000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '3.48946998', 'isolatedWallet': '0', 'updateTime': 1618973357682, 'ROE': 0}), ('DGB/USDT', {'symbol': 'DGBUSDT', 'positionAmt': 0.0, 'entryPrice': 0.0, 'markPrice': '0.00000000', 'unRealizedProfit': 0.0, 'liquidationPrice': '0', 'leverage': 5.0, 'maxNotionalValue': '250000', 'marginType': 'cross', 'isolatedMargin': '0.00000000', 'isAutoAddMargin': 'false', 'positionSide': 'BOTH', 'notional': '0', 'isolatedWallet': '0', 'updateTime': 0, 'ROE': 0})])}